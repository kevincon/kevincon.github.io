[{"content":"A little about me:\nI\u0026rsquo;ve been lucky to have worked on the following projects:\nüöõ dev experience for autonomous truck software developers at Stack AV üí≥ managed dev environments and tooling for Square Point of Sale devices ü§ñ HIL test automation for Intel Optane solid state drive firmware üëì graphics firmware for the Intel Vaunt smart glasses ‚åöÔ∏è app/UI firmware for Pebble smart watches\nI also enjoy drinking cold brew, solving puzzles, playing video games, and birdwatching.\n","date":"April 11, 2025","externalUrl":null,"permalink":"/","section":"","summary":"A little about me:","title":"","type":"page"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/car/","section":"Tags","summary":"","title":"Car","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/emulator/","section":"Tags","summary":"","title":"Emulator","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/leaf/","section":"Tags","summary":"","title":"Leaf","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/mobile/","section":"Tags","summary":"","title":"Mobile","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/nissan/","section":"Tags","summary":"","title":"Nissan","type":"tags"},{"content":" Nissan\u0026rsquo;s App # Nissan\u0026rsquo;s official NissanConnect¬Æ EV \u0026amp; Services iPhone app:\nlets you manage the unique features of your LEAF like charging the battery, adjusting climate controls and checking the battery status, all from your mobile device\nHere is a screenshot of what it looks like for my car:\nThe app is\u0026hellip;fine. Here is one representative review from the Apple App Store:\nMy main issue with the app is that it lacks a home screen widget I could use to quickly check my car\u0026rsquo;s battery status, unlike apps for other electric car brands like Rivian, Ford, and Lucid.\nThird-Party Apps # Meanwhile, others have developed their own Nissan LEAF apps with a custom user interface and additional features (some with a home screen widget!):\nLEAF Manager by Gyathaar EVA: Leaf by Rob Winters My Leaf by Tobias Westergaard Kjeldsen Unfortunately, I understand that none of these apps are still available to use where I live in North America. üòû\nThe developer of \u0026ldquo;My Leaf\u0026rdquo; shared his frustration in a blog post, explaining how Nissan\u0026rsquo;s deliberate changes to their North American API forced him to discontinue support for users in the region:\nI simply won‚Äôt support it any longer because of Nissan of North America‚Äôs persistant work on blocking third party clients. I continued to try and support the API during the last 12 months. Playing cat and mouse with Nissan. I simply don‚Äôt have the time and honestly the drive to continue when I know Nissan are consistently trying to break third party clients on purpose. It‚Äôs a sad and foolishness reality indeed.\nProject Goals # Nevertheless, I decided to take on the challenge of developing an iPhone home screen widget that could show me the battery charge status of my Nissan LEAF car.\nI added one more constraint to the project: no spending money. I believe Nissan\u0026rsquo;s app should already provide a home screen widget, so it didn\u0026rsquo;t seem fair to have to spend any money on this project. However, using tools/devices I already had access to was fair game.\nNotably, that ruled out using something like Sidecar which appears to provide a home screen widget. I think it looks very slick, but it requires the purchase of a wireless On-board Diagnostics (OBD) scanner plus a $6.99 USD/month subscription. üòì\nIt also ruled out using the popular LeafSpyPro app which similarly requires the purchase of a wireless OBD scanner and costs $19.99 USD. To my knowledge, it doesn\u0026rsquo;t provide a home screen widget itself, but I think you could probably develop one using its data syncing feature.\nResults # I am happy to report I was successful and spent no money! Here is a screenshot of the widget:\nAnd if you tap the widget, it opens the NissanConnect app. You\u0026rsquo;ll notice in the following video that there are a few extra non-ideal screen transitions (more on that below), but hey, you get what you pay for!\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! How it Works # To reduce the risk of any API-breaking changes, I\u0026rsquo;m just using the official NissanConnect app without any modifications:\nI created a GitHub repo containing a GitHub Action that: uses apkeep to download the NissanConnect app uses Appium to: install and launch the app on an Android device connected to the host via the Android Debugger (ADB) automate tapping through the app\u0026rsquo;s screen to sign into the app using provided account credentials scrape and output the text of the vehicle\u0026rsquo;s status after it refreshes kevincon/nissan-connect-scraper GitHub Action that scrapes the NissanConnect¬Æ Android app for info about a Nissan LEAF vehicle. Python 1 1 I created a separate GitHub repo containing a GitHub Actions workflow scheduled to run a job multiple times throughout the day that: uses Tailscale to ephemerally connect the job\u0026rsquo;s GitHub runner host to a tailnet on which there is already connected a Raspberry Pi 4B with 2 GB RAM (sitting on my desk at home) that is running Android 15 with ADB turned on connects to the Raspberry Pi via ADB runs the GitHub Action from (1) using my Nissan account credentials stored in GitHub Actions secrets formats the scraped vehicle data and sends it in an email to IFTTT kevincon/nissan-leaf-widget-updater GitHub Actions workflow that runs on a schedule to update a widget on my phone with information about my Nissan LEAF. null 1 1 I created an Apple Shortcut on my iPhone named OpenNissanConnect that opens the NissanConnect app: https://www.icloud.com/shortcuts/fd139fa01719483a89fcbde391435ff7 I created a free IFTTT applet that triggers on the email sent by the workflow from (2) and displays the body of the email within a \u0026ldquo;Notification Widget\u0026rdquo; on my iPhone\u0026rsquo;s home screen The Link URL field contains a TinyURL that redirects to shortcuts://run-shortcut?name=OpenNissanConnect which uses the Shortcuts URL scheme to run the Apple Shortcut from (3). I did this because IFTTT seems to check that the Link URL you provide actually resolves to a valid web URL; otherwise, the IFTTT website just opens and displays an error when you tap on the widget.\nThe NissanConnect app developers could definitely make changes that would break how this widget works, but those changes would by definition probably negatively affect regular human users too which I hope they would want to avoid.\nFuture Work # My original plan was to run an Android emulator on the GitHub Actions runner in the cloud so I wouldn\u0026rsquo;t need to maintain my own Android device, and that almost works (in fact, it does work on my M3 Apple Silicon macOS laptop using an arm Android emulator), but it seems like the NissanConnect app (or maybe the server it connects to) may detect when x86_64 Android is being used and then refuse to sign in. Or at least, I always saw the following error when I tried both in the cloud and on an old x86_64 laptop I had:\nAnd unfortunately, at the time of writing, I understand:\na cloud VM environment must support nested virtualization in order to run an Android emulator with hardware acceleration the only macOS arm runners GitHub provides are M1 and M2 machines, but nested virtualization is only available on M3 and later the only other arm runner GitHub supports is a Linux arm64 runner whose hardware does not support nested virtualization Luckily, the NissanConnect app has a \u0026ldquo;demo mode\u0026rdquo; that does not require signing into an account to use, so I was able to run an Android emulator in the cloud as part of the automated continuous integration testing for the GitHub Action.\nMaybe if GitHub Actions adds support for M3 Apple Silicon runners in the future, then I might be able to switch to running all of this in the cloud for free\u0026hellip; ü§û\n\u0026hellip;or I might trade in my Nissan LEAF and get a different electric car with a better app experience before that happens. üòÖ\n","date":"April 11, 2025","externalUrl":null,"permalink":"/posts/leaf-widget/","section":"Posts","summary":"Nissan\u0026rsquo;s App # Nissan\u0026rsquo;s official NissanConnect¬Æ EV \u0026amp; Services iPhone app:","title":"Nissan's LEAF¬Æ App Doesn't Have a Home Screen Widget So I Made My Own for Free","type":"posts"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/phone/","section":"Tags","summary":"","title":"Phone","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"April 11, 2025","externalUrl":null,"permalink":"/tags/widget/","section":"Tags","summary":"","title":"Widget","type":"tags"},{"content":" Spoiler: she said yes! My girlfriend Kacha and I have been dating for over four years. We have talked frequently about getting married, and Kacha had given me a few ideas about what she wanted in a proposal:\nMake it personal Surprise her Capture it for posterity She only gave me one rule to follow:\nDo not propose in public in front of many people, i.e. no stadium, Disneyland, etc. proposals.\nFor reasons that will become apparent later in the story, it is important to mention that I often teased Kacha that I might just propose with a pizza box if I could not think of anything better. This form of proposal actually seems to be fairly common, so no offense to others who proposed that way, but I was just joking because I knew I could think of something that Kacha would enjoy more.\nInspiration struck a few months ago when I won a Windows Mixed Reality ( read: virtual reality) headset at a hackathon.\nWhile working on that hackathon project I learned the basics of how to create a VR experience using the Unity game engine, so I came up with the idea that I would surprise Kacha by creating a VR experience for her as part of my proposal.\nIn addition to following Kacha\u0026rsquo;s main rule of not proposing in public in front of lots of people, I thought incorporating a VR experience would be a fun idea because she would be able to replay it and enjoy it as many times as she wanted.\nSo over several weeks I worked in secret, mostly late at night after Kacha was asleep, teaching myself how to use Unity to create the VR experience I had in mind.\nThen, on April 15, 2018, I asked Kacha if she wanted to try a new VR game I found. I told her it was kind of a low-quality indie game but that I thought she might enjoy it. After she put on the headset, I started recording video of her on my phone.\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! In VR, Kacha found herself in an auditorium. On the stage, an orchestra started to play one of Kacha\u0026rsquo;s favorite orchestral pieces: the first movement of Scheherazade by Rimsky-Korsakov. Actually it was just this Creative Commons video recording of the Kaohsiung American School orchestra playing because I did not feel confident animating an entire orchestra in 3D.\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Every member of the audience in the auditorium was the same low-polygon old man gently swaying to the music. I had duplicated the character to save some time. üòâ\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! About a minute into the orchestra\u0026rsquo;s playing, the music was suddenly interrupted by my voice saying \u0026ldquo;stop the music!\u0026rdquo;. A screen came down in front of the orchestra, and a video of me started to play.\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! In the video of me that played, I told Kacha that I knew she didn\u0026rsquo;t want me to propose in front of a lot of people, and with that the members of the audience disappeared. üí®\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! During the video, I told Kacha how much I love her and that I want to spend the rest of my life with her. ‚ù§Ô∏è\nAt the end of my video, I said \u0026ldquo;As promised in our past discussions, here\u0026rsquo;s a pizza box.\u0026rdquo; Then a pizza box appeared in front of her.\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! I told you the pizza box joke would be important.\nMy video then froze and the pizza box opened to reveal text reading \u0026ldquo;Remove VR headset now!\u0026rdquo;.\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Kacha took off the headset to see me in front of her on one knee holding a ring. I asked her to marry me, and she said yes! üéâ\nYour browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Afterwards, Kacha told me she loved the proposal. She said she was incredibly surprised and appreciated how much work I put into creating the VR experience for her. And she said she was happy to see the reference to our pizza box joke. üçï\nI learned a lot about Unity while working on this project, and despite a few technical challenges that I will blog about separately, working with Unity and the Windows Mixed Reality Toolkit was an enjoyable experience.\n","date":"May 3, 2018","externalUrl":null,"permalink":"/2018/05/03/vr-proposal.html","section":"Posts","summary":"Spoiler: she said yes!","title":"How I Used Virtual Reality to Propose to my Wife","type":"posts"},{"content":"","date":"May 3, 2018","externalUrl":null,"permalink":"/tags/marriage/","section":"Tags","summary":"","title":"Marriage","type":"tags"},{"content":"","date":"May 3, 2018","externalUrl":null,"permalink":"/tags/proposal/","section":"Tags","summary":"","title":"Proposal","type":"tags"},{"content":"","date":"May 3, 2018","externalUrl":null,"permalink":"/tags/unity/","section":"Tags","summary":"","title":"Unity","type":"tags"},{"content":"","date":"May 3, 2018","externalUrl":null,"permalink":"/tags/virtual-reality/","section":"Tags","summary":"","title":"Virtual Reality","type":"tags"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/firmware/","section":"Tags","summary":"","title":"Firmware","type":"tags"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/gameboy/","section":"Tags","summary":"","title":"Gameboy","type":"tags"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/mario/","section":"Tags","summary":"","title":"Mario","type":"tags"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/pebble/","section":"Tags","summary":"","title":"Pebble","type":"tags"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/pokemon/","section":"Tags","summary":"","title":"Pokemon","type":"tags"},{"content":"I worked on UI and graphics firmware at Pebble from April 2015 until the company was acquired by Fitbit in December 2016. One of my favorite internal hackathon projects I worked on with some Pebble coworkers involved porting¬†Game Boy emulators¬†to the Pebble Time.\nWe worked on two versions of this project; one version ported a Game Boy emulator into a custom version of the Pebble Time firmware, and another version ported a different Game Boy emulator into a regular Pebble Time app built with the public Pebble SDK.\nBoth versions only ran original Game Boy ROMs (i.e. no Game Boy Color ROMs), although they both did support games with custom color palettes.\nVersion One: Custom Firmware # Around May 2015 I worked with Varun Reddy to port a Game Boy emulator called BitBoy (which is itself an ARM port of the gnuboy Game Boy emulator) to the Pebble Time.\nWe picked BitBoy because it was written in C and had already been demonstrated to run on the ARM Cortex M4 STM32F405 CPU (168 MHz 192 KB RAM), which is in the same family of processors as the Pebble Time‚Äôs ARM Cortex M4 STM32F439ZG CPU (run at 100 MHz, 256 KB RAM).\nWe ported BitBoy into a modified version of the Pebble firmware instead of as a regular Pebble SDK app for a few important reasons:\nGame Boy emulation requires more RAM than is available to Pebble SDK apps (only 64 KB for RAM and code combined), so by building the emulator into the firmware we could resize the firmware‚Äôs RAM partitions to support the emulator‚Äôs memory requirements Pebble SDK apps only get 256 KB of resource storage, so building the emulator into the firmware gave us unrestricted access to the watch‚Äôs flash storage for storing ROMs (necessary for large ROMs such as Pokemon Red which has a size of 1 MB) We wanted to connect an NES controller to the emulator via the Pebble Time‚Äôs smartstrap port, and, at the time, the smartstrap APIs had not yet been released in the public Pebble SDK Before we added smartstrap support for the NES controller, we used the following button control scheme for testing the emulator:\nNote that we reserved the back button for easily exiting the emulator app.\nBy utilizing frameskip we were able to achieve performance of about 24 FPS, making this version of the Pebble Game Boy emulator reasonably playable.\nBrian Gomberg worked on connecting an NES controller to the Game Boy emulator via the Pebble Time‚Äôs smartstrap port. He used an early version of the Seeed Studio RePhone (Xadow) smart strap kit to interface the controller with the smartstrap port, and he modified our custom Pebble firmware to forward signals from the smartstrap port to the Game Boy emulator.\nHere are some pictures of Pokemon Red running on the Pebble Time:\nVersion Two: SDK App # In August 2015 I worked with Heiko Behrens on another version of the Pebble Game Boy emulator. We ported an emulator called PlutoBoy using the public Pebble SDK so it could be side-loaded as a regular Pebble app. This was a fun challenge because:\nSDK apps have access to far less RAM than a built-in firmware app SDK apps only receive 256 KB of resource storage for ROMs (so unfortunately Pokemon is not an option) SDK resources are not stored contiguously in flash, which means trivial memory mapping of the ROM is not possible We chose PlutoBoy as the emulator to port because it was written in C, ran on our Mac laptops using SDL (which made it fast and easy to test changes we made to the emulator to support the Pebble), and it was already structured in a way that abstracted hardware specifics to support multiple platforms (which made adding the Pebble Time as one more platform easy).\nThe Pebble SDK RAM constraints (only 64 KB for RAM and code combined) did not allow us to load any ROMs (the smallest being 32 KB) completely into memory, so instead we used a cache to load chunks of the ROM into memory on-demand. This method worked but was quite slow because the memory had to be copied from the kernel into userspace on each cache miss. At best it ran at only about 14 FPS and was not realistically playable.\nHere is a video of Super Mario Land running on the Pebble Time in this version of the project, although note that the video is sped up 300% because of the slow performance:\nAs you can see in the video, we used the same button control scheme for this version as we did in the previous iteration of the project.\nSource Code # I realize that some people may be interested in the source code from these projects, but unfortunately I cannot release them because I neither have access to them anymore nor do I own the code. These projects were done for internal hackathons and thus Pebble (now Fitbit) owns them.\nHowever, I would be delighted to see other developers use the ideas from this article to port game emulators to the Pebble watches in their own projects. :)\nConclusion # I enjoyed working on these projects with my coworkers because I grew up playing games like Pokemon on the Game Boy, and so it was fun to learn more about how the Game Boy hardware works as well as gain some experience porting 3rd party code to new hardware platforms (which I‚Äôve already found useful in several other projects).\nAdditional Resources # The Ultimate Game Boy Talk GbdevWiki RealBoy emulator blog posts GameBoy Emulator in JavaScript article series List of Game Boy cartridges and what memory bank controller they use Everything You Always Wanted To Know About GAMEBOY but were afraid to ask Many thanks to Heiko Behrens, Brian Gomberg, and Varun Reddy for reviewing drafts of this article and for their work on these projects.\n","date":"March 1, 2017","externalUrl":null,"permalink":"/2017/03/02/porting-game-boy-emulators-to-the-pebble-time.html","section":"Posts","summary":"I worked on UI and graphics firmware at Pebble from April 2015 until the company was acquired by Fitbit in December 2016.","title":"Porting Game Boy Emulators to the Pebble Time","type":"posts"},{"content":"","date":"March 1, 2017","externalUrl":null,"permalink":"/tags/rom/","section":"Tags","summary":"","title":"Rom","type":"tags"},{"content":"","date":"December 30, 2013","externalUrl":null,"permalink":"/tags/cs229/","section":"Tags","summary":"","title":"Cs229","type":"tags"},{"content":"","date":"December 30, 2013","externalUrl":null,"permalink":"/tags/dota-2/","section":"Tags","summary":"","title":"Dota 2","type":"tags"},{"content":"","date":"December 30, 2013","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":"","date":"December 30, 2013","externalUrl":null,"permalink":"/tags/machine-learning/","section":"Tags","summary":"","title":"Machine Learning","type":"tags"},{"content":"","date":"December 30, 2013","externalUrl":null,"permalink":"/tags/stanford/","section":"Tags","summary":"","title":"Stanford","type":"tags"},{"content":" I took Stanford‚Äôs machine learning class, CS 229, this past quarter. For my final project, I worked with Daniel Perry to apply a few different machine learning algorithms to the problem of recommending heroes for Dota 2 matches.\nTL;DR: We achieved about 70% accuracy for predicting match outcomes based on hero selection alone using logistic regression, and we made a small improvement on that result using K-nearest neighbors.\nDownload final report\nCode on GitHub\nIntroduction # Dota 2, the sequel to a Warcraft III mod called Defense of the Ancients (DotA), is an online multiplayer computer game that has attracted professional players and the arrival of international tournaments. Each match consists of two teams of five players controlling ‚Äúheroes‚Äù with an objective of destroying the opposing team‚Äôs stronghold. There are 106 unique heroes in Dota 2 (circa December 2013).\nWhy work on a hero recommendation engine for Dota 2? A widely-believed conjecture is that the heroes chosen by each team drastically influences the outcome of the match. The positive and negative relationships between heroes can give one team an implicit advantage over the other team. Valve‚Äôs annual Dota 2 tournament, The International, had a prize pool of over $2.8 million dollars in August 2013. With that much money on the line, professional teams recognize the importance of hero selection. Some matches take up to ten minutes for hero selection by both teams.\nProfessional players spend thousands of hours practicing the game, so they tend to gain an intuition for picking heroes. This ‚Äúgut instinct‚Äù is not as accessible to more casual players, so we thought it would be interesting to explore how machine learning could help solve the problem of recommending heroes.\nRelated Work # In researching prior work, we discovered a web application called Dota 2 Counter-Pick (no longer available) that uses machine learning to recommend heroes for Dota 2 matches. From the website‚Äôs about page:\nWe model hero picking as a zero-sum-game and learn the game matrix by logistic regression. When suggesting picks and bans we assume that teams are mini-max agents that take turns picking one hero at a time.\nOur growing database includes over 1 million matches from the high skill bracket where players did not disconnect or leave. For 63% of these matches, our method predicted the winning team correctly based on picks alone.\nWe were very inspired by the accuracy of Dota 2 Counter-Pick, and we set out to improve on their results.\nData Collection # We used the Steam Web API for collecting data about public Dota 2 matches. We wrote a Python script (called dotabot2.py in the GitHub repository) and set it up on a cron job to record data from the 500 most recent public matches every 20 minutes. We only considered matches that satisfied the following requirements:\nThe game mode is either all pick, single draft, all random, random draft, captain‚Äôs draft, captain‚Äôs mode, or least played. These game modes are the closest to the true vision of Dota 2, and every hero has the potential to show up in a match. The skill level of the players is ‚Äúvery-high,‚Äù which corresponds to roughly the top 8% of players. We believe utilizing only very-high skill level matches allows us to best represent heroes at their full potential. No players leave the match before the game is completed. Such matches do not capture how the absent players‚Äô heroes affect the outcome of the match. We filtered our dataset on some of these requirements after running dotabot2.py, so that script‚Äôs is_valid_match() function does not account for all three of these requirements.\nThe data for each match is structured as JSON and includes which heroes were chosen for each team, how those heroes performed over the course of the game, and which team ultimately won the game. We stored the JSON for each match in a MongoDB database during data collection.\nWe collected data for 56,691 matches between November 5, 2013 and December 7, 2013. We exported 90% of the matches from our database to form a training set of 51,022 matches. We exported the remaining 10% of our database to form a test set of 5,669 matches.\nPicking a Feature Vector # Machine learning algorithms typically require an input query to be described as a vector of features. For our feature vector, we came up with the following scheme to describe which heroes were chosen by each team in a match:\nIn Dota 2 matches, one team is called the ‚Äúradiant‚Äù and the other team is called the ‚Äúdire.‚Äù These terms are roughly analogous to ‚Äúhome‚Äù and ‚Äúaway,‚Äù as they only determine the starting point of each team on the game world map, which is roughly symmetric.\nThere are 106 heroes in Dota 2 (circa December 2013), but the web API uses hero ID numbers that range from 1 to 108 (two hero IDs are not used), so for our algorithms we used a 216-element feature vector, \\( x \\), such that:\n$$ \\begin{aligned} x_i \u0026amp;= \\begin{dcases} 1 \\text{ if a radiant player played as the hero with id } i\\ 0, \\text{ otherwise} \\end{dcases}\\ x_{108+i} \u0026amp;= \\begin{dcases} 1 \\text{ if a dire player played as the hero with id } i\\ 0, \\text{ otherwise} \\end{dcases} \\end{aligned} $$\nWe also defined our label, \\( y \\), to be:\n$$ \\begin{aligned} y = \\begin{dcases} 1 \\text{ if the radiant team won}\\ 0, \\text{ otherwise} \\end{dcases} \\end{aligned} $$\nMaking Predictions # Since our dataset contains information about heroes on teams in specific radiant vs. dire configurations, simply running our algorithms on each match in our dataset using the feature vector described above does not fully utilize all of the data.\nInstead, we make predictions using the following procedure. Given a match feature vector, which we call radiant_query:\nRun the algorithm on radiant_query to get radiant_prob, the probability that the radiant team in radiant_query wins the match. Construct dire_query by swapping the radiant and dire teams in radiant_query so that the radiant team is now the bottom half of the feature vector and the dire team is now the top half of the feature vector. Run the algorithm on dire_query to get dire_prob, the probability that the radiant team in radiant_query loses the match if it was actually the dire team instead. Calculate the overall probability overall_prob as the average of radiant_prob and (1 - dire_prob). Predict the outcome of the match specified by radiant_query as the radiant team winning if overall_prob \u0026gt; 0.5 and as the dire team winning otherwise. This procedure accounts for matches in our dataset that might not have the team configuration of a given query in one direction (e.g. radiant vs. dire) but may have the configuration in the other direction (e.g. dire vs. radiant).\nValidating the Importance of Hero Selection Using Logistic Regression # Logistic regression is a model that predicts a binary output using a weighted sum of predictor variables. We first trained a simple logistic regression model with an intercept term to predict the outcome of a match.\nA plot of our learning curve for logistic regression is shown below. The test accuracy of our model asymptotically approaches 69.8% at about an 18,000 training set size, indicating that 18,000 matches is an optimal training set size for our logistic regression model.\nWe believe that this logistic regression model shows that hero selection alone is an important indicator of the outcome of a Dota 2 match. However, since logistic regression is purely a weighted sum of our feature vector (which only indicates which heroes are on either team), logistic regression fails to capture the synergistic and antagonistic relationships between heroes.\nPredicting Match Outcome Using K-Nearest Neighbors # K-nearest neighbors (KNN) is a non-parametric method for classification and regression that predicts objects‚Äô class memberships based on the k-closest training examples in the feature space.\nWe chose to implement KNN in order to better model the relationships between heroes instead of simply taking into account wins when a hero is present.\nAt a high level, we continue to focus on wins and the hero composition of teams, however with KNN, we have an avenue to weigh matches according to how similar they are to a query match we are interested in. For example, if we are interested in projecting who will win a specific five on five matchup (our query match), a match with nine of the heroes from the query match present will give us more information on who will win the query match than a match with only one hero from the query match present.\nWe used a custom weight and distance function and chose to utilize all training examples as ‚Äúnearest neighbors.‚Äù Our polynomial weight function described below aggressively gives less weight to dissimilar training examples:\n$$ \\begin{aligned} w_i \u0026amp;= (\\frac{ \\sum_{j=1}^{216} AND(q_j, x^{(i)}_j)}{NUM_IN_QUERY})^d \\end{aligned} $$\nHere, \\( x^{(i)} \\) represents the feature vector for training match \\( i \\) and is compared by the logical \\( AND \\) operator to query vector \\( q \\). Index \\( j \\) represents the hero ID index of each respective vector. \\( NUM\\_IN\\_QUERY \\) represents the number of heroes present in the query vector. For example, \\( NUM\\_IN\\_QUERY \\) is 10 if the query contains all 5 heroes for each team.\nThe function is normalized to be between 0 and 1, and it gives more weight to matches that more closely resemble the query match. To do this, the function compares the query match vector to the training match vector and counts every instance where a hero is present in both vectors.\nA larger \\( d \\) parameter will result in similar matches getting much more weight than dissimilar matches. Alternatively, a low \\( d \\), for example \\( d = 1 \\), will result in each match being weighted solely by how many heroes in common the match has with the query match. Stated another way, a high \\( d \\) will choose to put more emphasis on the synergistic and antagonistic relationships between heroes, while a lower \\( d \\) will put more emphasis on the independent ability of a hero.\nTo choose the optimal \\( d \\) dimension parameter described above, we used k-fold cross validation with \\( k = 2 \\) on 20,000 matches from our training set and varied \\( d \\) across otherwise identical KNN models.\nSince KNN must compare the query match to every match in the training set and compute weights and probabilities, this process was quite slow and took about ten hours. Due to time constraints, using more folds or more matches would have taken too long to finish.\nA graph of the accuracies achieved when varying the weight dimension for a KNN model trained on our training set and evaluated on our test set is shown below. We found the optimal weight dimension to be \\( d = 4 \\), which achieved a mean accuracy of 67.43% during the k-fold cross validation.\nA plot of our learning curve for KNN is shown below. The test accuracy of our model monotonically increases with training set size up to nearly 70% for around 50,000 training matches. Because we do not see the learning curve level off, this may imply that more data could further improve our accuracy.\nRecommending Heroes Based on Predicted Match Outcome # We recommend heroes for a team using a greedy search that considers every possible hero that could be added to the team and ranks the candidates by probability of the team winning against the opposing team if the candidate was added to the team.\nOur recommendation engine is modular so that either of our algorithms could be used to recommend heroes. Given the ID numbers of the heroes on both teams, the recommendation engine proceeds as follows:\nCreate a feature vector for the match. Create a set of new feature vectors, each with a different candidate hero added to the original feature vector. Run an algorithm to compute the probability of victory with each feature vector from step 2, averaging the probabilities of the team winning in both radiant and dire configurations as described earlier. Sort the candidates by probability of victory to give ranked recommendations. Future Work # Despite the high accuracy of our K-nearest neighbor model, the performance was quite slow. The five data points we used in our learning curve took about four hours total to calculate, and the k-fold cross validation used to find the optimal weight dimension took over 12 hours.\nWe believe that the performance of our K-nearest neighbor model could be improved in a number of ways. First, the binary feature vector used could be stored as an integer in binary representation to improve memory usage. Second, the calculation of weighted distances could be parallelized across multiple CPU cores. Third, a GPU could be utilized to vectorize the weighted distance function calculations.\nAlthough the version of the game did not change during the time we collected match data, a new patch is released for Dota 2 every few months that dramatically changes the balance of the game. Therefore, we believe that a sliding window of match history data that resets when a new patch is released could help maintain data relevancy. For this reason, it would be useful to find if there is a training match size for which performance levels off so that we could collect only as much data as is needed.\nFinally, we could experiement with a different search algorithm for our recommendation engine such as A* which would account for the opposing team picking heroes that could counter our initial recommendations. However, due to time constraints we were not able to implement A* search for our recommendation engine.\nUltimately, we believe there are many promising directions which future explorations in this area could take.\nConclusion # We don‚Äôt claim to be experts on Dota 2 or machine learning, but we are encouraged by our results that machine learning could be an effective tool in recommending heroes for Dota 2 matches. Feel free to contribute to the project on GitHub and contact us with any questions.\nkevincon/dotaml A DOTA 2 hero recommendation engine for Stanford\u0026rsquo;s CS 229 Machine Learning course. JavaScript 124 32 ","date":"December 30, 2013","externalUrl":null,"permalink":"/2013/12/30/using-machine-learning-to-recommend-heroes-for.html","section":"Posts","summary":"I took Stanford‚Äôs machine learning class, CS 229, this past quarter.","title":"Using Machine Learning to Recommend Heroes for Dota 2 Matches","type":"posts"},{"content":"","date":"September 15, 2013","externalUrl":null,"permalink":"/tags/audit/","section":"Tags","summary":"","title":"Audit","type":"tags"},{"content":"","date":"September 15, 2013","externalUrl":null,"permalink":"/tags/cheating/","section":"Tags","summary":"","title":"Cheating","type":"tags"},{"content":"","date":"September 15, 2013","externalUrl":null,"permalink":"/tags/hackathon/","section":"Tags","summary":"","title":"Hackathon","type":"tags"},{"content":"","date":"September 15, 2013","externalUrl":null,"permalink":"/tags/open-source/","section":"Tags","summary":"","title":"Open-Source","type":"tags"},{"content":"","date":"September 15, 2013","externalUrl":null,"permalink":"/tags/pennapps/","section":"Tags","summary":"","title":"Pennapps","type":"tags"},{"content":" Here‚Äôs a conversation I‚Äôm sure you‚Äôve experienced if you‚Äôve ever been to a hackathon‚Äôs demo day:\nYou: Hey, what did you guys make this weekend?\nThem: We made X, let me show you a [video, slideshow, demo].\nYou: Hey that‚Äôs pretty cool‚Ä¶so does it actually work?\nMotivation to Discuss Cheating # The idea of cheating at hackathons isn‚Äôt new, and others have written about suspected cheating at hackathons. Rob Spectre even (humorously) suggested that cheating is the easiest way to win first place at a hackathon.\nI‚Äôll concede that talking about cheating at hackathons isn‚Äôt much fun. Despite the competitive atmosphere, my favorite aspect of hackathons is the sense of community I feel there when participants share their passion for tech and help each other learn how to use new programming languages and technologies.\nNevertheless, the stakes are becoming too high to ignore the notion of cheating at hackathons. This past weekend at the PennApps hackathon at the University of Pennsylvania, hackathon participants competed for over $27,000 in prizes. The MHacks hackathon at the University of Michigan, to be held next weekend, is offering over $30,000 in prizes.\nTypes of Cheating # I think there are three main types of hackathon cheating that should be addressed:\n1. The demonstration of the hack is fake.\nDepending on the hackathon, demonstrations might consist of a video submission, live presentation, or both.\nThanks to movie magic, videos can be altered/modified to make it look like the hack can do something it can‚Äôt.¬†Even aspects of live demos can be faked. For example, return values can be hardcoded, disjoint parts of the hack can be made to appear to be connected, and results can be preloaded to hide the real-time speed of a hack.\nGranted, there could be a grey area here if the hack 100% works but the time allotted to present is not enough to demonstrate a real-time demo. However, I think it is reasonable to ask for full disclosure of any shortcuts used.\n2. The hack is real, but the coding was done or started by the team before the start of the hackathon.\nThe complexity or polish of a hack might be observed to be too impressive to have been completed in a single day or weekend, and it can be difficult to prove otherwise. This is further¬†complicated¬†by the diverse range of skills and experiences amongst hackathon participants.\n3. The hack is real, but the coding was done by a larger team than allowed due to unauthorized remote teammates.\nThanks to the magic of the Internet, the work of building a hack can be delegated to remote teammates. Some hackathons allow this strategy, but most hackathons do have a teammate limit. Therefore, it can be difficult to police how many people were actually involved in building a hack.\nProposals to Prevent Cheating # 1. Require all participants to submit their hack‚Äôs source code.\nThis may be the simplest way to help prevent cheating, yet many hackathons don‚Äôt require source code of projects to be submitted. It might be out of a desire to let participants maintain ownership of their code in case they would like to create a business around their project. I support that notion, but I believe that source code could be submitted to hackathon administrators without making the code open-source.\nSome larger hackathons (including PennApps) have experimented with source code submission in the past, and one of the organizers told me that they have found communicating instructions for the submission to be too difficult. Teams like to use different methodologies for developing their code, and many teams wait until the last minute of the hackathon to put their code in the format required for submission, causing delays for late entries. Yet I believe that requiring source code submission for finalists is reasonable since there is more time available between the end of coding and the final presentations.\nAdditionally, hackathons could require source code to be version controlled. It wouldn‚Äôt be foolproof, but the timestamps and usernames associated with code commits could help alleviate concerns about work being done before the start of a hackathon or by unauthorized teammates.\n2. Create an ‚ÄúAudit Team‚Äù of experienced programmers and past hackathon participants to evaluate the integrity of hacks.\nI think many instances of hackathon cheating could be prevented by just having a group of impartial people take a closer look at each of the hacks. Using experienced programmers and past hackathon participants would ensure that the right questions are asked, and if the source code is available for review then many instances of cheating could be easily identified.\nFor larger hackathons, it may be impossible to have an Audit Team review all hacks, but certainly the hacks that have been selected as finalists should be audited before they take the stage for final presentations.\nPlus, ‚ÄúAudit Team‚Äù could be abbreviated to ‚ÄúA-Team‚Äù, so that‚Äôs kind of cool.\n3. Create an anonymous cheating tip line.\nAn anonymous tip line could notify the Audit Team or hackathon administrators if someone suspects a team of cheating or planning to cheat. False positives could be resolved by taking a look at the code and discussing the allegation with the accused team.\n4. Don‚Äôt make it about the prizes.\nThe motivation I pointed to for this discussion about cheating is how the growing pool of prizes at hackathons can encourage participants to use dishonest means to win that aren‚Äôt in the spirit of the event.\nBut what if those types of prizes didn‚Äôt exist? What if the reward for building the best hack was just a title or a trophy?\nThe formation of a Major League Hacking organization¬†for colleges was announced this past week at PennApps, and I really like how they plan on operating. Student participants at select college hackathons across the country can win points for their school by the merit of their hacks, and the school with the most points at the end of the season earns this kickass trophy:\nI think it‚Äôd be great to see hackathons¬†use this strategy of offering trophies/medals/certificates to honor hackers‚Äô efforts instead of cash or new laptops for prizes.\nConclusion # I love hackathons, and I‚Äôve participated in several (11 at time of writing). I hate to think that the fun and spirit of community of hackathons could be overshadowed by cheating, but I think it‚Äôs good to start a discussion and think about incorporating some preventative measures.\nHave you experienced cheating at a hackathon? Do you have ideas for preventing cheating? Join the discussion at Hacker News.\nThanks to Dalton Banks, Daniel Conley, Alexey Komissarouk, Trisha Kothari, Varun Sampath, and Teddy Zhang¬†for their feedback on this post.\n","date":"September 15, 2013","externalUrl":null,"permalink":"/2013/09/15/preventing-cheating-at-hackathons.html","section":"Posts","summary":"Here‚Äôs a conversation I‚Äôm sure you‚Äôve experienced if you‚Äôve ever been to a hackathon‚Äôs demo day:","title":"Preventing Cheating at Hackathons","type":"posts"},{"content":"","date":"May 7, 2013","externalUrl":null,"permalink":"/tags/compiler/","section":"Tags","summary":"","title":"Compiler","type":"tags"},{"content":" Inlining functions¬†can potentially increase the performance of a program. When you mark a function with inline, the compiler will try to expand calls to the function to actually be the body of the function.\nThe idea is that inlining a function will eliminate the overhead associated with calling that function, like pushing values onto the stack and triggering a context switch. However, depending on the program, performance could actually get worse because inlining functions increases the overall size of the code which can lead to instruction cache memory thrashing (i.e. the computer can‚Äôt keep all of the instructions in its faster, short-term memory).\nTo ask the compiler to inline a function in C, you can use the inline keyword when declaring your function:\ninline int plus_one(int x) { return x + 1; } In the example above, we inline the (not very useful) plus_one() function because it only has one instruction and therefore saving the overhead of performing a full context switch is a useful optimization.\nNote that the inline keyword usually only asks the compiler to inline a function. The compiler might analyze the program and actually not inline a function, even if it has the inline keyword, because it thinks the inlining will not increase performance.\nThis leaves developers wondering ‚Äúdid the compiler actually inline my function?‚Äù\nSome people will advise you to use the -Winline compiler flag to have the compiler output warnings/information about whether it is actually inlining the functions you precede with the inline keyword. But depending on your compiler, this might not be very useful. For example, here is the Intel‚Äôs C/C++ Compiler icc inlining report output:\n\u0026lt;matmul.c;37:74;IPO INLINING;dotprod;0\u0026gt; INLINING REPORT: (dotprod) [1/2=50.0%] -\u0026gt; _mm_add_pd(EXTERN) -\u0026gt; _mm_mul_pd(EXTERN) -\u0026gt; _m_empty(EXTERN) -\u0026gt; _mm_setzero_pd(EXTERN) \u0026lt;matmul.c;79:128;IPO INLINING;matmul;0\u0026gt; INLINING REPORT: (matmul) [2/2=100.0%] -\u0026gt; INLINE (MANUAL): dotprod(3) (isz = 34) (sz = 45 (21+24)) -\u0026gt; _mm_setzero_pd(EXTERN) -\u0026gt; _m_empty(EXTERN) -\u0026gt; _mm_mul_pd(EXTERN) -\u0026gt; _mm_add_pd(EXTERN) -\u0026gt; INLINE (MANUAL): dotprod(4) (isz = 34) (sz = 45 (21+24)) -\u0026gt; _mm_setzero_pd(EXTERN) -\u0026gt; _m_empty(EXTERN) -\u0026gt; _mm_mul_pd(EXTERN) -\u0026gt; _mm_add_pd(EXTERN) -\u0026gt; _vla_free(EXTERN) -\u0026gt; _vla_alloc(EXTERN) What the heck does all of that mean? A friend helped me understand that the percentages indicate the number of locations that the compiler decided to inline the function, but I was not able to find a good reference/guide on the Internet on how to interpret the output for icc‚Äôs inlining report.\nI have heard that gcc has a more readable inlining report, but I have not tried it yet.\nWhen I first wrote this blog post, I suggested looking at the generated assembly code to check if the compiler actually inlined the function. In the case of x86, this would involve searching for any ‚Äúcall‚Äù assembly instructions (‚Äúcall‚Äù is the x86 way of calling a function).\nHowever, a friend pointed out that this is not a perfect way of determining whether a compiler inlined functions. Besides the fact that it is architecture-specific (i.e. ARM and MIPS have different assembly instructions for calling functions):\nIt ignores indirect jumps, which is another valid way of calling a function (e.g.¬†leal %eax, jmp *%eax). The linker might make a ‚Äúlink-time optimization‚Äù (or LTO) which changes whether or not the function is inlined. So your best chance of understanding if your functions are being inlined is to look at the generated assembly code and the compiler‚Äôs inlining report, but even those resources might not tell the whole story.\nThanks to Saleem¬†Abdulrasool for providing some really helpful insights for this post.\n","date":"May 7, 2013","externalUrl":null,"permalink":"/2013/05/07/how-to-determine-if-your-compiler-is-inlining-your.html","section":"Posts","summary":"Inlining functions¬†can potentially increase the performance of a program.","title":"How to Determine if Your Compiler is Inlining Your Functions","type":"posts"},{"content":"","date":"May 7, 2013","externalUrl":null,"permalink":"/tags/icc/","section":"Tags","summary":"","title":"Icc","type":"tags"},{"content":"","date":"May 7, 2013","externalUrl":null,"permalink":"/tags/inline/","section":"Tags","summary":"","title":"Inline","type":"tags"},{"content":"","date":"May 7, 2013","externalUrl":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming","type":"tags"},{"content":"","date":"March 29, 2013","externalUrl":null,"permalink":"/tags/asio/","section":"Tags","summary":"","title":"Asio","type":"tags"},{"content":"","date":"March 29, 2013","externalUrl":null,"permalink":"/tags/boost/","section":"Tags","summary":"","title":"Boost","type":"tags"},{"content":"","date":"March 29, 2013","externalUrl":null,"permalink":"/tags/c++/","section":"Tags","summary":"","title":"C++","type":"tags"},{"content":"","date":"March 29, 2013","externalUrl":null,"permalink":"/tags/ebook/","section":"Tags","summary":"","title":"Ebook","type":"tags"},{"content":"","date":"March 29, 2013","externalUrl":null,"permalink":"/tags/review/","section":"Tags","summary":"","title":"Review","type":"tags"},{"content":"I was asked to review an eBook based on a [blog post I wrote a while back on raw sockets in the Boost.Asio C++ library]({% post_url 2012-07-29-using-raw-sockets-in-asioboostasio %}).\nSummary\nJohn Torjo\u0026rsquo;s¬†Boost.Asio C++ Network Programming¬†($34.99 print, $18.69 eBook from Packt Publishing) serves two purposes. First, it‚Äôs a great overview of the capabilities of the Asio/Boost.Asio C++ networking libraries. Second, it is a good companion/guide for geting started with Boost.Asio.\nContent\nThere are seven chapters in the book:\nGetting Started with Boost.Asio (a brief overview of the library, including its history/organization) Boost.Asio Fundamentals (an awesome walkthrough of the most important functions in the library) Echo Server/Clients (code examples of echo server/clients in synchronous/asynchronous and TCP/UDP configurations) Client and Server (code examples of more complicated synchronous/asynchronous server/client applications) Synchronous vs. Asynchronous (a fantastic guide to mixing synchronous and asynchronous programming, including some code examples of a proxy server) Boost.Asio - Other Features (describes some miscellaneous features of the Boost.Asio library, including special mechanisms for streams/buffers and co-routines) Boost.Asio - Advanced Topics (concludes the book by introducing a few advanced features like handler tracking, SSL support, and OS-specific quirks) Pros\nFrom the first chapter, it‚Äôs easy to tell that the author is very experienced with Boost.Asio. He offers advice while explaining concepts (‚ÄúI don‚Äôt like this‚Äù, ‚ÄúI don‚Äôt think this would be a good idea‚Äù, etc.) which I found useful. I also liked the warnings he gives¬†about common pitfalls, like the problems associated with copying sockets and what can happen if buffers/sockets go out of scope during asynchronous operations (spoiler: you have a bad time).\nI liked the organization of information in the book. For example, in Chapter 2 (Boost.Asio Fundamentals), the author not only describes the parameters of each function in detail but also the signature for callback functions. All the information I need is right there in one place.\nI also liked the overview of advanced features at the end of the book. I learned some things I didn‚Äôt know before, like how co-routines let you combine the benefits of synchronous and asynchronous programming. The author also takes some time to explain the pros and cons of using vanilla Asio vs. Boost.Asio.\nCons\nMy biggest complaint about this book is the formatting of the code examples. The code snippets have no newlines, so it can be difficult to read some of the longer examples. The code is also all in black and white, but I think it would be easier to read if the formatting included basic syntax highlighting. Thankfully, the code is available for download from the Packt website, and there are a few more newlines thrown in those files.\nI also wish there were a few more diagrams to explain the ordering of events and function calls in the first few chapters. The rest of the book is okay, though; there is a nice diagram at the beginning of each example in the examples chapters (echo, nontrivial clients/servers, etc.).\nLastly, it would have been nice if the author had included a basic networking tutorial with concepts like the network stack and protocol basics. I guess if you‚Äôve decided to work with a networking library like Boost.Asio, hopefully you already know the basics of networking.\nAlternatives\nThis is the first Boost.Asio book I have looked at, but after reading this book I wanted to see how it compared to a few free books about Boost.Asio:\nThe Boost C++ Libraries by Boris Schaling\nThis free online book is formatted as a series of HTML pages, although it can be purchased as an eBook or PDF. It looks like it has been updated to a full-fledged eBook sold on Amazon, B\u0026amp;N, etc. to support the July 2011 version of the Boost libraries. Unlike the book I just reviewed, this online resource covers all of the Boost libraries, not just Boost.Asio. A downside to that approach is that it does not have as much detail or as many examples as the Packt book.\nBoost.Asio by Christopher Kohlhoff\nThis free online PDF was written by the author of the Boost.Asio library! I used it when I worked with Boost.Asio a while back, and it‚Äôs a great resource for pretty much everything you can do with the library. However, it is a little outdated (it was last modified in 2009).\nVerdict\nI recommend the Packt Boost.Asio book to anyone who is planning to use the Boost.Asio library and is willing to spend a little money to get an up-to-date reference source. The author has a lot of expertise to share and the book has some great organization. The code snippets in the book are not formatted very well, but all of the code is available online for free so that‚Äôs not a big deal. And although there are free alternatives available online, they have not been updated in a while.\n","date":"March 29, 2013","externalUrl":null,"permalink":"/2013/03/30/review-of-packts-boostasio-c-network.html","section":"Posts","summary":"I was asked to review an eBook based on a [blog post I wrote a while back on raw sockets in the Boost.","title":"Review of Packt's \"Boost.Asio C++ Network Programming\" eBook","type":"posts"},{"content":"","date":"August 17, 2012","externalUrl":null,"permalink":"/tags/angstrom/","section":"Tags","summary":"","title":"Angstrom","type":"tags"},{"content":"","date":"August 17, 2012","externalUrl":null,"permalink":"/tags/beagleboard/","section":"Tags","summary":"","title":"Beagleboard","type":"tags"},{"content":"","date":"August 17, 2012","externalUrl":null,"permalink":"/tags/format/","section":"Tags","summary":"","title":"Format","type":"tags"},{"content":"I about tore my hair out on this one.\nThe guys who make the Angstrom distribution of Linux have a script called mkcard.txt ( https://angstrom.s3.amazonaws.com/demo/beagleboard/index.html) which has traditionally worked for me to format an SD card properly for the Beagleboard family of single-board computers.\nBut for some reason whenever I would run it in the last month or so on either Ubuntu 10.04 or Ubuntu 12.04, I would receive the following error and the card would not be properly formatted:\n/dev/sdb2 is apparently in use by the system; will not make a filesystem I found a path to the solution thanks to this askubuntu.com question: https://askubuntu.com/questions/124565/mkfs-vfat-unable-to-open-dev-sdg1-device-or-resource-busy/164106#164106.\nThere seem to be two problems. The first is that dmsetup is stealing the SD card devices.\nThe second problem is that the script calls kpartx to add a partition mapping of the SD card you‚Äôre using to the /dev/mapper folder. In English, this means that it will take the drive string (‚Äú/dev/sdb‚Äù in my case), mount the partitions on the drive, and create device files for them in /dev/mapper. I‚Äôm not sure why this causes the script to fail, but I‚Äôm guessing the system isn‚Äôt relinquishing control of the partition device files to the script so it can run mkfs.vfat and mke2fs on them.\nSo anyway, to make the mkcard.txt script work, first run it once (and experience the error I referenced above).\nThen, remove the stolen devices from dmsetup by running:\nsudo dmsetup remove sdb1 sudo dmsetup remove sdb2 Finally, comment out the following lines in mkcard.txt:\nif [ -x `which kpartx` ]; then kpartx -a ${DRIVE} fi And run mkcard.txt one more time, and you should be good to go!\n","date":"August 17, 2012","externalUrl":null,"permalink":"/2012/08/17/formatting-an-sd-card-for-the-beagleboardxmbone.html","section":"Posts","summary":"I about tore my hair out on this one.","title":"Formatting an SD Card for the Beagleboard(Xm,Bone) in Ubuntu 12.04","type":"posts"},{"content":"","date":"August 17, 2012","externalUrl":null,"permalink":"/tags/sd-card/","section":"Tags","summary":"","title":"Sd Card","type":"tags"},{"content":"","date":"August 17, 2012","externalUrl":null,"permalink":"/tags/ubuntu/","section":"Tags","summary":"","title":"Ubuntu","type":"tags"},{"content":"Did you know that I had a brief stint as a radio personality? Well, sort of‚Ä¶\nWhen I was an undergraduate at the University of Pennsylvania, I was required to take a writing course. Many of the writing courses Penn offers are unexciting, but I was lucky to enroll in a course called ‚ÄúWriting for Radio.‚Äù The class was held at the local independent radio station, WXPN, which was about four blocks away from campus.\nThe course was a fun diversion from the math and science courses I was taking. We had four instructors, and each one was an actual radio host at WXPN. We spent ten weeks listening to a lot of radio, like news programs on NPR and band interviews that were recorded at WXPN. Our instructors taught us how to speak properly on the radio, like how to break up a radio script into bite-size chunks you can say without running out of breath.\nThe final project for this course was to go out into the world and interview someone about an event they were hosting. I hopped on a train to Wilmington, Delaware and interviewed a member of the Delaware Theatre Company. She was directing a Christmas play called ‚ÄúIt‚Äôs a Wonderful Life: A Live Radio Play.‚Äù It‚Äôs basically the traditional story of ‚ÄúIt‚Äôs a Wonderful Life,‚Äù but they tell it as if it were broadcast on the radio. So the actors and actresses on stage interact with a lot of props to create sound effects during the play. It seemed appropriate for an assignment to create a radio piece.\nI really liked how the interview turned out, and WXPN even broadcast it live on the radio! Give it a listen and let me know what you think. Should I eventually return to radio?\nNote: The audio levels aren‚Äôt that great, so you might turn up your volume to hear it better.\n","date":"August 13, 2012","externalUrl":null,"permalink":"/2012/08/13/kevin-on-broadcast-radio.html","section":"Posts","summary":"Did you know that I had a brief stint as a radio personality?","title":"Kevin on Broadcast Radio","type":"posts"},{"content":"","date":"August 13, 2012","externalUrl":null,"permalink":"/tags/penn/","section":"Tags","summary":"","title":"Penn","type":"tags"},{"content":"","date":"August 13, 2012","externalUrl":null,"permalink":"/tags/radio/","section":"Tags","summary":"","title":"Radio","type":"tags"},{"content":"","date":"August 13, 2012","externalUrl":null,"permalink":"/tags/writing/","section":"Tags","summary":"","title":"Writing","type":"tags"},{"content":"","date":"August 13, 2012","externalUrl":null,"permalink":"/tags/wxpn/","section":"Tags","summary":"","title":"Wxpn","type":"tags"},{"content":"","date":"July 29, 2012","externalUrl":null,"permalink":"/tags/sockets/","section":"Tags","summary":"","title":"Sockets","type":"tags"},{"content":"This past week I got to play with the cross-platform Asio and Boost.Asio C++ libraries for socket programming.\nUnfortunately it turns out what I was trying to do (inject network packets) is not possible with these libraries, but in the process of trying to get that to work I was able to use the basic_raw_socket template class successfully, which it looks like several¬†other people on the Internet are having trouble with. So I‚Äôve written up a GitHub repository with the code and a pretty detailed README. I hope it will help others understand how to use raw sockets in Asio better.\nkevincon/asio-rawsockets-example Simple demonstration of using Boost.Asio\u0026rsquo;s basic_raw_socket template class to transmit packets with a custom transport layer header. C\u0026#43;\u0026#43; 32 12 ","date":"July 29, 2012","externalUrl":null,"permalink":"/2012/07/29/using-raw-sockets-in-asioboostasio.html","section":"Posts","summary":"This past week I got to play with the cross-platform Asio and Boost.","title":"Using Raw Sockets in Asio/Boost.Asio","type":"posts"},{"content":"","date":"July 2, 2012","externalUrl":null,"permalink":"/tags/homebrew/","section":"Tags","summary":"","title":"Homebrew","type":"tags"},{"content":"","date":"July 2, 2012","externalUrl":null,"permalink":"/tags/mac/","section":"Tags","summary":"","title":"Mac","type":"tags"},{"content":"","date":"July 2, 2012","externalUrl":null,"permalink":"/tags/scala/","section":"Tags","summary":"","title":"Scala","type":"tags"},{"content":"If you download Scala from the official site, it comes as a tgz archive of folders containing binaries. In other words, it‚Äôs a stand-alone install that you can put wherever you want. If you‚Äôre like me and would prefer Scala tucked away in the operating system, you‚Äôll want to start by installing the awesome Mac package manager, Homebrew.\nFirst, make sure you have Xcode installed (it‚Äôs free in the Mac App Store) with its optional command line tools installed (in Xcode go to Preferences, Downloads, and click ‚ÄúInstall‚Äù next to Command Line Tools).\nNext, install Homebrew by running the following in a terminal:¬†/usr/bin/ruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026#34; Note: The above command is changed by the Homebrew guys from time to time. If the above command doesn‚Äôt seem to be working, check the Homebrew website for the latest incantation: https://brew.sh/\nFollow the instructions and enter your system password when prompted. Once Homebrew is installed, it‚Äôs super easy to install Scala by typing the following in a terminal:\nbrew install scala Homebrew will install Scala in /usr/local, and it also puts the man pages for the Scala tools in the appropriate place.\nIf your next step is to learn Scala, I‚Äôm finding ‚ÄúProgramming in Scala‚Äù to be very helpful. It was written by the creator of Scala, Martin Odersky, and the first edition is free online at¬†https://www.artima.com/pins1ed/.\n","date":"July 2, 2012","externalUrl":null,"permalink":"/2012/07/02/the-easy-way-to-install-scala-on-mac-os-x.html","section":"Posts","summary":"If you download Scala from the official site, it comes as a tgz archive of folders containing binaries.","title":"The Easy Way to install Scala on Mac OS X","type":"posts"},{"content":"","date":"June 15, 2012","externalUrl":null,"permalink":"/tags/arduino/","section":"Tags","summary":"","title":"Arduino","type":"tags"},{"content":"","date":"June 15, 2012","externalUrl":null,"permalink":"/tags/cli/","section":"Tags","summary":"","title":"Cli","type":"tags"},{"content":"In case anyone ever needs to program an Arduino Mega using avrdude but doesn‚Äôt want to run around the Internet looking for the command line settings, here you go:\nArduino Mega (ATmega 1280)\navrdude -p m1280 -c arduino -P /path/to/serial -b 57600 -F -U flash:w:/path/to/image.hex Arduino Mega (ATmega 2560)\navrdude -p m2560 -c stk500v2 -P /path/to/serial -b 115200 -F -U flash:w:/path/to/image.hex ","date":"June 15, 2012","externalUrl":null,"permalink":"/2012/06/15/programming-arduino-mega-using-avrdude.html","section":"Posts","summary":"In case anyone ever needs to program an Arduino Mega using avrdude but doesn‚Äôt want to run around the Internet looking for the command line settings, here you go:","title":"Programming Arduino Mega using avrdude","type":"posts"},{"content":"My brother‚Äôs laptop was stolen out of a car during Spring Break 2012 while he was visiting Montreal, Quebec.\nHe filed a police report, but it seemed unlikely that we would ever see the HP 2000-299WM laptop again. No, it‚Äôs not the greatest laptop in the world with its dual-core Intel Celeron 2.10 GHz processor, integrated graphics, and 3 GB of RAM. However, it was brand new as of January 2012. Along with the laptop, my brother‚Äôs camera and rented college textbooks were also stolen.\nAbout a month later, I received a notification on my desktop computer from my McAfee Antivirus program that it was time to renew my family‚Äôs account subscription. I was redirected to McAfee‚Äôs site to purchase the renewal, and on the same page I was presented with a nice high-level view of all of the computers attached to my family‚Äôs account.\nYou can imagine my surprise when I looked at the list and saw that not only was my brother‚Äôs stolen HP laptop still listed on the account but the computer was marked as active and reported a current IP address!\nI ran a WHOIS lookup on the IP address to see if I could learn more about who was behind it. The IP address turned out to be located in Montreal and belonged to an ISP called Vid√©otron.\nMy brother never got a chance to turn on his laptop before it was stolen in Montreal, so someone in Montreal had our laptop and was still using our McAfee Antivirus subscription! The thief might have been able to wipe my brother‚Äôs logon password (it‚Äôs possible to do this with an Ultimate Boot CD) to use his software and access his data.\nI went to Vid√©otron‚Äôs website and found a form to submit an incident of Internet abuse (seemed somewhat related). I submitted a description of the laptop and the IP address and asked them what I should do. They responded:\nDue to our country regulation, we are not authorized to give out information about our customers. You will have to contact the RCMP (canadian police) or the international police of your country so they contact the RCMP. Upon receipt of a proper warrant, we will give these information to the police.\nSo next my father (the official owner of the laptop) and I emailed the Royal Canadian Mounted Police (RCMP) and explained the situation. We provided the model and serial numbers of the laptop and a screenshot from the McAfee info page where I first found the IP address.\nAn officer from the RCMP responded to our email and said that one of his detectives would take the case. We corresponded with the detective a few times about the laptop. He was able to get a warrant issued for Vid√©otron to identify the person behind the IP address, and then one day we received an email from the detective which read:\nI have your laptop.\nThe RCMP detective mailed us the laptop and AC adapter, and I‚Äôm happy to say that the laptop is in great condition. The detective didn‚Äôt let us know about any of the other stolen items or the details of how he retrieved the laptop, but we also didn‚Äôt ask. We were just happy to see the laptop again.\nThe RCMP was amazing in helping us recover the laptop and I commend them for their efforts.\nWhen we got the laptop back I booted into Windows 7 safe mode and immediately disabled the network adapters. Wouldn‚Äôt it be crazy if the thief had installed some malware to steal our data on our home network? Talk about a trojan horse. Luckily this didn‚Äôt seem to be the case.\nThe laptop seemed to have been restored from the recovery partition and only had a few programs (Skype, Microsoft Office, and PokerStars) installed. McAfee Antivirus was installed but I was surprised to discover that the laptop‚Äôs captor was using his own license for McAfee, not my family‚Äôs license.\nSo my hypothesis is that McAfee uses some identifier unique to an individual computer to keep track of which account it‚Äôs registered to, perhaps the network card‚Äôs MAC address. But how was I able to see the laptop‚Äôs IP address through my family‚Äôs McAfee account page if the laptop‚Äôs captor was using a different account?\nIf McAfee does not prevent an individual computer from being linked to multiple accounts, this could be a significant security issue for people who buy used computers. If anyone from McAfee reads this or if anyone else might know more details, please let me know. In the meantime, I‚Äôve reformatted the laptop and installed a different antivirus program.\nBy the way, this was the only laptop in my family that did not have the awesome and free Prey anti-theft software installed. But, of course, it does now.\n","date":"May 27, 2012","externalUrl":null,"permalink":"/2012/05/27/how-i-thwarted-a-laptop-thief-with-the-help-of.html","section":"Posts","summary":"My brother‚Äôs laptop was stolen out of a car during Spring Break 2012 while he was visiting Montreal, Quebec.","title":"How I Thwarted a Laptop Thief with the Help of McAfee and the Royal Canadian Mounted Police","type":"posts"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/laptop/","section":"Tags","summary":"","title":"Laptop","type":"tags"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/mcafee/","section":"Tags","summary":"","title":"Mcafee","type":"tags"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/montreal/","section":"Tags","summary":"","title":"Montreal","type":"tags"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/rcmp/","section":"Tags","summary":"","title":"Rcmp","type":"tags"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/theft/","section":"Tags","summary":"","title":"Theft","type":"tags"},{"content":"","date":"May 27, 2012","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"","date":"April 23, 2012","externalUrl":null,"permalink":"/tags/cis194/","section":"Tags","summary":"","title":"Cis194","type":"tags"},{"content":"","date":"April 23, 2012","externalUrl":null,"permalink":"/tags/haskell/","section":"Tags","summary":"","title":"Haskell","type":"tags"},{"content":"For my Haskell final project, I contributed to Chris Done‚Äôs Haskell library for the Kinect ( https://github.com/chrisdone/freenect) that wraps the functionality of the open-source libfreenect library. My contribution was adding support for the RGB video camera (previously only support for the depth camera existed).\nHere‚Äôs a link to my GitHub repo with video support added in:\nkevincon/freenect Haskell interface to Kinect. Haskell 1 0 And if you‚Äôre interested in reading the report write-up, I‚Äôve uploaded it to my website here.\nHere‚Äôs a picture I took with the Kinect once my project was completed:\n","date":"April 23, 2012","externalUrl":null,"permalink":"/2012/04/24/haskell-final-project.html","section":"Posts","summary":"For my Haskell final project, I contributed to Chris Done‚Äôs Haskell library for the Kinect ( https://github.","title":"Haskell Final Project","type":"posts"},{"content":"","date":"April 23, 2012","externalUrl":null,"permalink":"/tags/kinect/","section":"Tags","summary":"","title":"Kinect","type":"tags"},{"content":"","date":"April 23, 2012","externalUrl":null,"permalink":"/tags/project/","section":"Tags","summary":"","title":"Project","type":"tags"},{"content":"","date":"July 26, 2011","externalUrl":null,"permalink":"/tags/goron-city/","section":"Tags","summary":"","title":"Goron City","type":"tags"},{"content":"I made a ringtone of the Goron City theme from Legend of Zelda: Ocarina of Time. None of the ones I found on the Internet contained the best sounds of the theme or looped properly. This one does both, and is now on my iPhone. Please download and share below! :)\n","date":"July 26, 2011","externalUrl":null,"permalink":"/2011/07/27/goron-city-ringtone.html","section":"Posts","summary":"I made a ringtone of the Goron City theme from Legend of Zelda: Ocarina of Time.","title":"Goron City Ringtone","type":"posts"},{"content":"","date":"July 26, 2011","externalUrl":null,"permalink":"/tags/legend-of-zelda/","section":"Tags","summary":"","title":"Legend of Zelda","type":"tags"},{"content":"","date":"July 26, 2011","externalUrl":null,"permalink":"/tags/nintendo-64/","section":"Tags","summary":"","title":"Nintendo 64","type":"tags"},{"content":"","date":"July 26, 2011","externalUrl":null,"permalink":"/tags/ringtone/","section":"Tags","summary":"","title":"Ringtone","type":"tags"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/electronics/","section":"Tags","summary":"","title":"Electronics","type":"tags"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/led/","section":"Tags","summary":"","title":"Led","type":"tags"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/rss/","section":"Tags","summary":"","title":"Rss","type":"tags"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/wireless/","section":"Tags","summary":"","title":"Wireless","type":"tags"},{"content":"Remember that four-panel 8x8 LED sign I programmed to scroll RSS feeds? Well thanks to the power of Xbee radios, now it‚Äôs wireless! The sign can now be controlled¬†remotely from a computer connected to a transmitting Xbee radio. The transmitting Xbee wirelessly sends the data it receives over serial to the receiving Xbee, which is attached to the sign.\nTo do this, I bought two Series 1 Xbee radio modules and two Xbee adapter kits from Adafruit Industries. The grand total was $73. The adapter kits had to be soldered, but that didn‚Äôt take very long.¬†I also changed my Arduino code on the sign to use two GPIO pins for software-based serial communication (NewSoftSerial). That way I could still use the main header to program the Arduino with new sketches.\nAdafruit also has a very helpful user guide for getting started with Xbee radios. I was surprised to learn that Xbees use serial AT commands, although it‚Äôs pretty strict about how it receives those commands. Apparently you have to wait a certain amount of time (in seconds) between consecutive commands, and although I was able to interact with it using AT commands, my commands were not echoed back on the terminal.\nThe good news is that for a simple wireless serial setup (which is what I‚Äôm doing here), you don‚Äôt have to program the Xbees at all. The Xbees are programmed by the manufacturer to have the same network ID, so they can talk with each other out of the box.\nI enjoyed working with the Xbee radios, and I look forward to incorporating them into more of my projects in the future.\n","date":"July 4, 2011","externalUrl":null,"permalink":"/2011/07/04/wireless-8x8-led-sign.html","section":"Posts","summary":"Remember that four-panel 8x8 LED sign I programmed to scroll RSS feeds?","title":"Wireless 8x8 LED Sign","type":"posts"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/xbee/","section":"Tags","summary":"","title":"Xbee","type":"tags"},{"content":"","date":"July 4, 2011","externalUrl":null,"permalink":"/tags/zigbee/","section":"Tags","summary":"","title":"Zigbee","type":"tags"},{"content":"","date":"June 10, 2011","externalUrl":null,"permalink":"/tags/diddy-kong-racing/","section":"Tags","summary":"","title":"Diddy Kong Racing","type":"tags"},{"content":"","date":"June 10, 2011","externalUrl":null,"permalink":"/tags/hotel/","section":"Tags","summary":"","title":"Hotel","type":"tags"},{"content":"I thought about entitling this article ‚ÄúHow to Play Nintendo 64 on a Philips 7225 C107 Hotel TV,‚Äù but I figured this crazy procedure could be generalized for anyone trying to hook up a peripheral device to this particular type of TV.\nFirst, a little back story: I‚Äôm staying at an extended stay hotel in Mountain View, CA for the summer while I work at Bump Technologies.¬†The hotel is very nice with a few minor exceptions (weak Internet signal and no oven). One slightly more annoying problem is that the room‚Äôs TV only has a coaxial cable/antenna input. No composite video. No S-video. Nothing else. I brought my Nintendo 64 with me hoping to play it on the TV, but first I would need to purchase a Nintendo 64 RF switch, which lets you connect a Nintendo 64 to older TVs through the coaxial cable/antenna input.\nI purchased the Innovation INNOV6917 Gamecube/Nintendo 64 RF Switch from Tiger Direct. It actually looks quite a bit different than the picture on Tiger Direct; there‚Äôs no ‚ÄúANT IN‚Äù port, there‚Äôs no Channel switcher (it‚Äôs hard-coded to channel 3), and the enclosure is a black rectangular prism.\nI hooked up the Nintendo 64 RF Switch to the TV and turned on the Nintendo 64. Sweet! Now I just need to change the channel to 3‚Ä¶wait, what? This particular TV gave me the message ‚ÄúChannel 3 Unavailable‚Äù whenever I tried to go to channel 3. In fact, it gave me that error message if I tried to access any channel other than the default cable channels the TV received.\nNormally I would go through the TV‚Äôs menu to do a new channel search, but this TV was just not cooperating. The only menu functions available (via the TV‚Äôs front panel) were Closed Captions and Sleep Timer. Hmm‚Ä¶\nTo the Internetz! I ran a bunch of searches trying to find a service manual for the TV that might contain a secret code I needed to enter on the remote to enter the super secret ‚Äúservice mode.‚Äù¬†I didn‚Äôt find anything like that, but I did find a bunch of complaints from other consumers who had experienced the same problem as me. Some said reprogramming the remote with a certain remote code unlocked more menu functionality, but the universal remote that came with the hotel only accepted 3 digit codes, not the 4 digit code described.\nAfter a fair amount of searching, I decided to go ask the hotel‚Äôs front desk for advice. I told the guy behind the counter that I was trying to hook up a Nintendo 64, and he said, ‚ÄúAs a gamer, I would just say fiddle with it until it works.‚Äù¬†I also asked if there was a TV serviceman for the hotel, and he said they had a general maintenance guy, but he wouldn‚Äôt be available until Monday.\nFiddle with it until it works? Not the best advice to give regarding CRT TVs, considering the thousands of volts they can contain even when powered off and unplugged. Still, I thought I would try one last thing.\nSomething odd about the TV in my room was that the coaxial cable/antenna input port was actually hanging out from the back of the TV, and part of the inside of the TV was exposed through what was clearly a hole cut by someone. Maybe it was done by a TV repairman, or maybe it was done by a previous tenant who knew the secret to accessing channel 3‚Ä¶\nThe coaxial cable/antenna input was actually a cable itself connected to an unknown RCA port on the inside of the TV. I could see it with my flashlight, and it was reachable with needle nose pliers, and that‚Äôs when I got an idea.\nI really don‚Äôt know what I was thinking, except that I thought maybe if I could match up the inputs and outputs just for the TV and N64 maybe something would show up on the screen.\nWell, it did work. And I don‚Äôt know why, but here‚Äôs how to connect a Nintendo 64 to a Philips PC7225 C107 Hotel TV. I happened to have the NES RF Switch with me as well, so you might have to purchase one in addition to the N64 RF switch. I highly recommend you power down the TV and disconnect it from the wall before ‚Äúfiddling‚Äù with it.¬†And if the inside of the TV is not accessible for you, you might have to cut a hole yourself, although I don‚Äôt advocate vandalising hotel property.\nOnce those connections are made, you can turn on the TV.¬†You‚Äôll notice of course that the cable channels are unavailable, since the cable is disconnected. I discovered that the Nintendo 64‚Äôs picture and sound came in on channels 8, 14, and 27, with channel 14 seeming to be the strongest.\nSo why did this work? I really don‚Äôt know. The connections seem to be completely backwards. I also wonder what would have happened if the Nintendo 64 RF Switch was set to appear on channel 4 instead of channel 3. Maybe everything would appear on a different set of three channels. There may even be an easier way to make this work, but I was working with what I had, and I‚Äôm just glad it worked. I‚Äôm interested in what kind of circuitry actually goes into the RF Switches, so I might look into that. In the meantime, I‚Äôm going to go play Diddy Kong Racing!\n","date":"June 10, 2011","externalUrl":null,"permalink":"/2011/06/11/how-to-access-channel-3-on-a-philips-7225-c107.html","section":"Posts","summary":"I thought about entitling this article ‚ÄúHow to Play Nintendo 64 on a Philips 7225 C107 Hotel TV,‚Äù but I figured this crazy procedure could be generalized for anyone trying to hook up a peripheral device to this particular type of TV.","title":"How to Access Channel 3 on a Philips 7225 C107 Hotel TV","type":"posts"},{"content":"","date":"June 10, 2011","externalUrl":null,"permalink":"/tags/phillips-7225-c107/","section":"Tags","summary":"","title":"Phillips 7225 C107","type":"tags"},{"content":"","date":"June 10, 2011","externalUrl":null,"permalink":"/tags/rf-switch/","section":"Tags","summary":"","title":"RF Switch","type":"tags"},{"content":"","date":"June 10, 2011","externalUrl":null,"permalink":"/tags/tv/","section":"Tags","summary":"","title":"Tv","type":"tags"},{"content":"","date":"June 2, 2011","externalUrl":null,"permalink":"/tags/microcontroller/","section":"Tags","summary":"","title":"Microcontroller","type":"tags"},{"content":"","date":"June 2, 2011","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"This past week I decided I was going to figure out how to send text over serial to the 8x8 LED sign my father and I built a few years ago.\nFirst, a little background on the panels. The printed circuit boards were purchased as part of a kit from a company called Modern Device. The design is quite nice. There are four LED driver chips (STP16C596) that can be programmed over SPI. The nature of the chips enables the panels to be connected in a daisy chain fashion. This greatly simplifies controlling the panels using a microcontroller because any data that is shifted out over SPI to one panel gets shifted into the next panel. Sounds a lot like the behavior of scrolling text, doesn‚Äôt it?\nBack of one of the panels.\nThe LEDs were not included with the Modern Device kit, so we purchased some really nice, ultra-bright LEDs from Mouser.\nAlong with the 8x8 LED panel kit, we chose to order what Modern Device calls a ‚ÄúBare Bones Board‚Äù, which is really just a small, custom Arduino board. It‚Äôs programmed using the Arduino IDE, choosing the ‚ÄúArduino NG or older w/ ATmega168\u0026quot;¬†option for the board type.\nArduino \u0026ldquo;Bare Bones Board‚Äù attached to panels.\nSo the summer before my freshman year of college (2008), my father and I soldered together the four LED panels we had purchased. My dad constructed a really neat wooden enclosure for the sign, complete with a plexiglass front and a housing for 4 D cell batteries (also supports 5V AC adapter). Maybe someday he‚Äôll write a blog post on how he designed the enclosure and put it together.\nBack of the sign.\nI also played with some of the sample Arduino code that Modern Device provided. The code was supposed to take a hard-coded string and scroll it repeatedly across the panels. However, the code was written to only support two panels.¬†When I ran the code on our four panel display, a weird ‚Äúmirror‚Äù effect happened to the text.¬†For example, if I wanted to scroll the string ‚ÄúHi!‚Äù, the four panels would look like this:\n| H| i!| H| i!|\nSo basically, the string would simultaneously scroll across both of the pairs of panels. I spent that summer before my freshman year of college trying to figure out what was going on, but at that point I really didn‚Äôt know much about electronics except for Ohm‚Äôs and Kirchhoff‚Äôs laws and how to solder. So I took the panels to college with the hope that I would learn how to fix them in my classes.\nIt wasn‚Äôt until Spring break of my sophomore year that I decided to dedicate some time to figuring out the scrolling issue. I was halfway through taking the ESE 350: Micrcontrollers \u0026amp; Embedded Systems class at Penn and I had learned a lot about SPI communication.¬†Also, someone on the Internet had released a really sweet-looking Arduino library for the 8x8 LED panels that supposedly supported scrolling up to 8 panels of text, so I was confident I would finally be able to get them working.\nUnfortunately, running the new library on the panels resulted in the same weird mirror effect. I decided to take a break from the software side and make sure there was nothing wrong with the hardware of the panels. It turns out that, along with the jumpers connecting the DATA-OUT of each panel to the DATA-IN of the next panel in one direction (which is correct), we had also made the same connections going in the opposite direction. For some reason, this caused the weird mirror effect I described above. As soon as I disconnected the offending jumpers, the text scrolled across all four panels correctly:\nI was also really excited because the new 8x8 LED Arduino library also supposedly supported sending new text to the sign in real-time over serial. For this to work, some Arduino code is loaded on the sign that basically listens for special strings over serial (e.g. ESC + T + scroll_speed + length_of_msg + msg) and updates the sign accordingly. Unfortunately, I wasn‚Äôt able to get this to work, so I shelved the sign again until I could learn more about programming and serial communication.\nWhich brings us to last week, when I finally had some more time to work on the sign. The Arduino library for the panels had not been updated, so I decided to see if there was something wrong with the code. Honestly, it was hard to tell. The code did not contain many useful comments and actually contained a few mistakes.\nSo I decided to write my own code for the Arduino that would listen over serial for something simpler than the commands the library used. I wanted my Arduino sketch to listen for any text over serial that is terminated with a newline character and just display that. So sending a string of ‚ÄúHello world!\\n‚Äù would scroll ‚ÄúHello world!‚Äù Simpler, right?\nI got it done, and my sketch was just under 100 lines of code (with comments).\nSo it was the moment of truth: I loaded my Arduino sketch on the sign, the sign reset, and‚Ä¶ARGH still no luck! Sending text strings over serial had no effect on the sign. Well, I guess once again it was time to make sure there were no problems with the hardware side of things. I found the culprit within 15 minutes. So the Arduino board‚Äôs hardware serial pins were pins 0 and 1. These were plugged into a custom cable my dad had made, with the opposite end of the cable plugged into the sign. It looks like we had accidentally plugged the RX and TX serial pins into a few unused pins on the sign panels. I unplugged the cable from the Arduino, bent the RX and TX serial pins down so they would not go into the cable, and plugged the cable back in. My Arduino sketch worked on the first try (always a great feeling!).\nI didn‚Äôt go back and try the Arduino library again, but I have a feeling it would probably work now. The guy who made the Arduino library also wrote some .NET Windows apps specifically to send text over serial to the sign, but these programs were not open-source and could only send custom text or twitter updates (but I never got it to accept my twitter credentials).\nAs a final project for the sign (at least for now), and as a primer for my internship this summer at Bump Technologies, I decided to write my own GUI application to send text to the sign over serial. I chose Python for the language since I needed to learn it for my internship and also because it is cross-platform, so it would run not only on my Ubuntu laptop but also on my Dad‚Äôs Windows 7 PC.\nMore specifically, I decided my app should do two things: send custom text and send RSS feed headlines. I won‚Äôt go too much into the specifics, but I wrote the app using a library called feedparser to parse the RSS feeds, pySerial to communicate with the sign over serial, and wxpython to put together the GUI. I also wrote some custom code to find all available serial ports (serialscan.py in the repo, see below), and I‚Äôm pretty sure it works on both Windows and Linux (not sure about Mac OSX though).\nWxpython-based GUI for controlling 8x8 LED sign, running in Windows 7.\nI also took this opportunity to create my first repository on GitHub and practice using git. Both the Arduino code and the Python code for this project are licensed under GNU GPLv3 and can be found at http://www.github.com/kevincon/8x8led. The code could use some more comments and clean-up, and the Python code requires pyserial, wxpython, and feedparser to be installed (see previous paragraph). The Arduino code also requires the main .cpp file from the Arduino library for the panels, and a zip file of it is included in the same folder as my code.\nI found Python to be a really fun language to program in. Most things were really simple to implement, and some things I never thought were possible actually are (e.g. you can ‚Äúpickle‚Äù an object and save it in its entirety to a file to be loaded back later). Wxpython was also a pretty good GUI framework to work with, or at least it seemed a lot better than Swing in Java.\nAnyway, here‚Äôs a video of the sign in action, scrolling headlines from Engadget. I would have recorded more, but the Flip video camera I was using wasn‚Äôt working very well:\nWhat do you think? Any ideas on what else the sign should scroll? Some things I thought of to work on in the future:\nWeather conditions Movie showtimes Stocks Sports scores ","date":"June 2, 2011","externalUrl":null,"permalink":"/2011/06/03/scrolling-rss-feeds-on-an-8x8-led-sign-via-serial.html","section":"Posts","summary":"This past week I decided I was going to figure out how to send text over serial to the 8x8 LED sign my father and I built a few years ago.","title":"Scrolling RSS Feeds on an 8x8 LED Sign via Serial","type":"posts"},{"content":"","date":"January 20, 2011","externalUrl":null,"permalink":"/tags/app/","section":"Tags","summary":"","title":"App","type":"tags"},{"content":"Here is a video of me presenting a mobile web application called \u0026ldquo;want2join.me\u0026rdquo; that I created with some of my friends at the 2011 PennApps Mobile hackathon.\n","date":"January 20, 2011","externalUrl":null,"permalink":"/2011/01/20/presenting-want2joinme-at-pennappsmobile-2011.html","section":"Posts","summary":"Here is a video of me presenting a mobile web application called \u0026ldquo;want2join.","title":"Presenting want2join.me at PennApps Mobile 2011","type":"posts"},{"content":"","date":"December 12, 2010","externalUrl":null,"permalink":"/tags/christmas/","section":"Tags","summary":"","title":"Christmas","type":"tags"},{"content":"","date":"December 12, 2010","externalUrl":null,"permalink":"/tags/dorm/","section":"Tags","summary":"","title":"Dorm","type":"tags"},{"content":"Every year around the holidays, my dorm,¬†Stouffer College House, puts on a program called Holiday Hobbit. The name is just an attempt to make the program secular. It‚Äôs really just Secret Santa for Stouffer residents. The only rule is that you cannot spend more than $10 on the gift.\nI decided to participate in the program this year. I was in the mood to do something creative, so I decided to make a Christmas decoration in the form of a table centerpiece. I also wanted to do something involving electronics, so I set out to create a miniature Christmas tree composed of LED lights and other assorted electronic component ‚Äòornaments.‚Äô And I decided to call this project, The Circuit-Tree (read: circuitry‚Ä¶get it?). Convinced that I wasn‚Äôt crazy by finding a similar project¬†online, I decided to start by making the tree itself.\nMy initial idea was to make the whole thing using only circuit components. So I would construct the tree itself using high-gauge green wire formed in concentric loops. The high-gauge-ness of the wire would maintain the form of the tree. I was short on time and resources so I went down to the undergraduate electronics lab to see what parts I could use. Unfortunately, they were out of green high-gauge wire. But I saw some neat colored LEDs sitting on a table, so I grabbed some of those.\nSince the high-gauge wire idea wasn‚Äôt going to work, I decided to try green pipe cleaners. I made a few calls and found out that Blick! Art Supplies in Center City had green pipe cleaners in stock. I went down to the store last week and checked out their selection of pipe cleaners. I was disappointed to see a limited selection. They had green pipe cleaners, but only about 5 in a pack of assorted colors.\nI looked around the store for something else that would work and ended up in the¬†Styrofoam¬†section. There, I found a small conic piece that I thought would work well for the tree. I also found a short cylindrical piece I thought would work well for the base. The added benefit of Styrofoam is that the circuit components I would use for the ornaments could be inserted directly into the tree, and they probably wouldn‚Äôt fall out.\nThe two pieces of Styrofoam were stock white, so with the help of one of the store employees I picked out some Basic green¬†acrylic¬†paint. I also bought a small, inexpensive foam brush for the painting.\nPaint, Styrofoam pieces, and foam brush purchased from an art supply store\nThe total of my purchases at Blick! was about $8, so I was close to hitting the $10 mark, but I knew that I already had a lot of the circuit components I needed (and I could always go take more from the Penn electronics labs).\nIt was easy enough to paint the conic Styrofoam piece using the acrylic paint, and it only took me about 15 minutes. I decided not to alter the base Styrofoam piece, since the white would look like snow.\nPainting the conic Styrofoam piece green\nNext, I set out to make the LED lights. Since these were actually going to light up, I needed to wire them up with a power line and a ground line connected to a battery. Here‚Äôs where I did something really‚Ä¶inefficient. I imagined two concentric loops of wire (one power, one ground) with LEDs wired in parallel between the two. The parallel-ness would ensure that if one LED burnt out, they wouldn‚Äôt all go out (of course, that‚Äôs the major flaw of wiring lights serially).\nSome of the problems of using two concentric loops of wire are:\nSince one of the loops is higher in altitude than the other, when you connect a power source you have to run a wire up to the higher loop, which isn‚Äôt very pretty. You‚Äôre limited in the number of LEDs you can connect between the loops because you only get one row (unless you attach more LEDs to the existing LEDs and build outwards, bending attached LEDs over to the side so they don‚Äôt get in the way, but that‚Äôs not a very good solution) I went ahead with this idea and soldered together one loop of wire by soldering individual lengths of wire in a circle, attaching LEDs at the junction of individual wires. Then, I put one loop around the tree and started constructing the second loop by soldering more individual wires to the free ends of the LEDs. Then I added the lines for power and ground and twisted them together (partly to keep them together and partly for aesthetics). When it was all said and done, it worked, but it wasn‚Äôt very pretty.\nThe first LED lights design, using two concentric loops of wire for power and ground\nMy friend and fellow electrical engineering major Shilpa suggested I run the power and ground lines diagonally around the tree with the LEDs in parallel in-between.¬†I thought about it for a second and realized that her idea is infinitely better than mine. Here‚Äôs why:\nThe lines loop around the tree diagonally, ending at the bottom, which means that the battery can connect directly at the base of the tree without having to run wires up to the top of the tree. Since running the lines diagonally creates multiple loops, and power and ground lines alternate, you can add many more rows of LEDs than my initial design. I chose not to do this because of time limitations, but I could have. Shilpa also noticed that I created the loops using individual wires soldered together and showed me how I can strip a segment in the middle of a wire using a wire-stripper and a box cutter. This made things so much easier.\nWith these ideas in mind, we sketched a schematic on paper. I decided to omit a current-limiting resistor, mainly because I didn‚Äôt have a resistor small enough to do it, but also because we had seven LEDs in parallel and the battery probably wasn‚Äôt going to source that much current.\nThe schematic for the Circuit-Tree, or at least the part that actually uses electricity\nI‚Äôm extremely grateful for Shilpa‚Äôs help because she soldered almost all of the LEDs while I was preoccupied with baking 50+ cookies for another Stouffer event.\nWe hooked up two AA batteries to the LED \u0026rsquo;ladder‚Äô and all of the lights lit up, so we started attaching the ladder to the tree. We used some high-gauge red wire for the power and ground lines, so we bent them at the ends to create \u0026lsquo;hooks‚Äô that we could insert directly into the Styrofoam. Shilpa had to leave, but I was able to do this easily enough.\nNext, I used Shilpa‚Äôs method of stripping a middle segment from the power line and the ground line to create a space to solder wires to the battery holder. I had taken a 2xAA battery holder from one of the Penn labs. Once the battery holder was soldered to the lights, I inserted 2 AA batteries and was satisfied when all of the lights lit up.\nThe rest of the display was completed by using some really sticky double-sided tape I picked up in Korea to attach the tree and the battery holder to the base. I also inserted a bunch of resistors, pots, capacitors, photo-resistors, and op-amps into the Styrofoam tree to act as \u0026lsquo;ornaments.‚Äô I bent small loops into the resistor terminals to make it look like an \u0026lsquo;angel ornament,‚Äô but I‚Äôm not sure anyone else would get that. Lastly, I used some more of the high-gauge red wire to form a star for the top of the tree. The Circuit-Tree minus batteries\nI also inserted a strip of paper with ‚ÄúPULL‚Äù written on it between one of the battery terminals to keep the lights off until it was removed. The finished product looked really good - much better than my initial design. The final cost, with circuit components included, probably wasn‚Äôt more than $15. A final requirement of the Holiday Hobbit program was to include a note with a hint as to my identity, so I printed the following \u0026lsquo;program‚Äô and folded it between the two AA batteries:\nif (nice) { receivePresent(); } else if (naughty) { receiveCoal(); } else if (hobbit) { System.out.println(‚ÄúHappy Holidays from your holiday hobbit‚Äù); System.out.println(‚ÄúI hope you enjoy this ‚ÄòCircuit-Tree‚Äô!‚Äù); System.out.println(‚Äú:)‚Äù); receivePresent(); } I gave the Circuit-Tree to my Holiday Hobbit and she said she really liked the gift, so mission accomplished! Merry Christmas/whatever everyone!\nThe completed Circuit-Tree\n","date":"December 12, 2010","externalUrl":null,"permalink":"/2010/12/13/o-circuit-tree-o-circuit-tree.html","section":"Posts","summary":"Every year around the holidays, my dorm,¬†Stouffer College House, puts on a program called Holiday Hobbit.","title":"O' Circuit-Tree, O' Circuit-Tree","type":"posts"},{"content":"","date":"November 27, 2010","externalUrl":null,"permalink":"/tags/autoplug/","section":"Tags","summary":"","title":"Autoplug","type":"tags"},{"content":"","date":"November 27, 2010","externalUrl":null,"permalink":"/tags/korea/","section":"Tags","summary":"","title":"Korea","type":"tags"},{"content":"","date":"November 27, 2010","externalUrl":null,"permalink":"/series/korea/","section":"Series","summary":"","title":"Korea","type":"series"},{"content":" This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize. We didn‚Äôt have time to eat breakfast before we left for the competition venue on the shuttle bus. When we got to the Business Tower we went to go check on our booth. We decided to reorganize things a little by pushing our two tables back towards the back of the booth. Kai complimented us on the organization of our booth; she said it was much neater than the other teams. Kristen came by to wish us luck, but we think she got the translation wrong because she kept telling us to ‚Äúcheer up!‚Äù\nAutoPlug booth all set up!\nMe, Kai, and Madhur ready for the competition!\nWe were having some difficulties with our demonstration. The set up involves the blue-box gateway being connected to a monitor. When you open the myMechanic app on the iPad, the gateway starts playing a video of a car driving around Philadelphia on the monitor that is synchronized with the data being sent to the iPad. However, the monitor kept going to sleep on us, because of the power settings of the gateway. We weren‚Äôt sure how to change the power settings since the Ubuntu running on the gateway is command-line-only (no GUI software is installed), so it looked really bad when the monitor just cut out during our demonstration. I asked Kai for a USB keyboard and she made some calls to try to get us one. In the mean time, we tried to run our demo as soon as the judges approached so that it would not cut out while they were there.\nDemo setup: Gateway showing synchronized video of driving around Philly.\nDemo setup: myMechanic iPad app and laptops with¬†PowerPoint¬†presentations\nAwesome gateway schematic poster we made the day before the competition\nAt some point in the morning the first group of judges came by. They actually spoke English so Kai just stood there in case they didn‚Äôt completely understand something. We gave them our presentation and they didn‚Äôt seem to react much at all. At the end one of the judges asked us to show him a demo of a plug-n-play device working with AutoPlug. We had to tell him that we haven‚Äôt implemented one yet. So we didn‚Äôt think we did a very good job with the first group of judges, but I talked to Jenny from the Serval team and she said it was about the same for them.\nMadhur presents to the judges\nI explain the myMechanic iPad app to the judges\nAt 11 AM there was an opening ceremony for the competition, but it was entirely in Korean. I guess they didn‚Äôt think the International teams would want to hear the ceremony. We got Kai to translate a few things for us, though. One of the big things was that there were several VIPs, like executives of big engineering companies and representatives from the Korean government. At the end of the ceremony the VIPs made their way directly to us! There was a man with a microphone and a cameraman. Kai explained that they wanted us to give them our presentation right then for the VIPs to see! But we weren‚Äôt able to start the demo correctly since we were rushed, so we basically gave them the presentation and sheepishly told them the demo wasn‚Äôt working right now. Then the microphone man said we were out of time and they moved on to a domestic booth. Yikes, well that didn‚Äôt go very well, but luckily there weren‚Äôt any judges in the group so maybe it doesn‚Äôt matter. We thought it was interesting that they didn‚Äôt seem to interview any of the other international teams, though‚Ä¶\nOpening ceremony. I wish they had translated all of it into English for us.\nAt noon we broke for lunch and went to the Food Court again. This time we asked Kai to order some bibimbop for us. It was difficult to find a seat since so many people from the competition were eating there as well. The bibimbop was pretty good. We asked Kai about the North Korean attack the day before. She said that stuff like that happens a lot, but this time she was more nervous because they attacked civilians. She thought it was good that we were leaving in a few days in case anything else happened.\nAfter lunch we finally received the USB keyboard. This allowed us to login to the gateway directly instead of remote connecting in using one of our laptops. The ability to login directly would let us press a key on the keyboard if the monitor went to sleep. Our second group of judges came by for a presentation, and this time it was much better. The presentation was great, the demo was great, and all the judges took the AutoPlug SDK discs we had made (thanks Susan and Anish!).\nAfter that group of judges, we took some time to walk around and look at the domestic teams‚Äô projects. There were some very cool demos. One group had a kayak gaming experience with a kayak you sit in and a paddle controller. The kayak actually moved around and there was a fan that blew air on you and you could see where you were going on a projector screen in front of you. There were two teams with table-top touch screen interactive computers. One was meant for phone companies to show off their phones, so you would put a particular phone on the table and the table would recognize it and show information, pictures, and video about it. Then if you put multiple phones on the table you can compare and contrast different models, very cool! There were also tons of robots, at least 5 quadrotor helicopters, and a ball segway.\nInteractive Kayak adventure!\nBirotor helicopter + RC car = awesome!\nThere were so many quadrotors!\nBall segway!\nThis might have been my favorite. Table-top touchscreen computer for phones.\nPut several phones on the table and compare/contrast their features!\nThere was one more group of judges near the end of the competition, but we had already packed up our demo materials so we just gave them the presentation. I think we did pretty good overall in the competition, but it really depends on what the judges were looking for. If they were looking for a really cool toy or physical demo, then we probably didn‚Äôt win anything. But if they were looking for a groundbreaking open source concept, then maybe we will end up winning something.\n(most of) the international team members! Great job guys!\nMadhur and I with the AutoPlug gateway\nMadhur and I got to be pretty good friends with a guy named Dany who worked on the Serval project (France). Dany, Madhur, and I went out after the competition to a chicken restaurant called Tacoya Chicken. The legal drinking age in Korea is 19, so I had my first legal drink ever in the form of Cass beer at the restaurant. It was actually probably the best beer I‚Äôve ever tasted.\nAfter the competition, all of the teams broke down their booths and said goodbye to the competition organizers. We said goodbye to Kai and Kristen. Kristen said she had been looking at pictures of Penn‚Äôs campus on the Internet and that she wants to come visit sometime.\n","date":"November 27, 2010","externalUrl":null,"permalink":"/2010/11/27/korea-day-three.html","section":"Posts","summary":"This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize.","title":"Korea - Day Three","type":"posts"},{"content":"","date":"November 27, 2010","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"November 27, 2010","externalUrl":null,"permalink":"/tags/world-embedded-software-contest/","section":"Tags","summary":"","title":"World Embedded Software Contest","type":"tags"},{"content":" This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize. We woke up early and went to the hotel‚Äôs restaurant, called Naru, to eat breakfast. It was a buffet and I was glad to see some eggs, bacon, and sausage after the fried chicken events of the night before. After breakfast we got all of our AutoPlug supplies together and went to the lobby to wait for our shuttle. There we noticed a few other International teams. We introduced ourselves to a group of students from Germany and Finland. Their project was a radio-controlled hovercraft! So cool! It looked inexpensive to make too: just Styrofoam, duct tape, CPU fans, and microcontrollers. We also spoke with a woman from Australia, Jenny, who happened to be representing the Serval project I had read about online. Their project is very cool, it is a peer-to-peer network for cell phones that replaces the need for cell towers.\nView from the outside of the hotel. Beautiful!\nWalking to the yellow shuttle bus to take us to the competition venue\nWe met a representative from the competition named Kristen and she led us to the shuttle bus. The shuttle drove us about 15 minutes to Digital Media City and The Business Tower where the competition was going to be held. We went up to a conference room where we met all of the other teams and had our orientation.\nOrientation, meeting the other teams, general info session\nWoo!\nThere are 8 international teams total, from 12 countries. We are the only American team in the competition. They gave us a lanyard/ID tag to wear and also our food tickets for the competition lunches. We also met our interpreter, Kai. She will help us present AutoPlug to the non-English-speaking judges and also provide general advice/guidance. The breakdown of the eight teams and their projects are:\nAutoPlug ‚Äì University of Pennsylvania (our project)\nServal ‚Äì INSA De Lyon (concept of a peer-to-peer network of cell phones called ‚Äúbat phones‚Äù to eliminate the need for cell towers)\nHoveralls ‚Äì Metropolia Finland (low-cost radio controlled hovercraft)\nREDEYES ‚Äì IIIT Hyderabad India (virtual gaming platform using spinning mirrors and lasers to project a ping-pong ball that you can use special gloves to play ping-pong with)\nDCL-OSRG - Waseda University Japan (tool for monitoring and virtualizing multicore embedded software)\niNuC ‚Äì Academia Sinica/ NationalTaiwan Univ. (Intelligent Nursing Cart for nurses in hospitals)\nUnique Studio - Huazhong Univ. (Android app that lets you edit photos. Over 20 effects!)\nHongkong Polytech Univ. (I didn\u0026rsquo;t catch exactly what their project was about, but it involved reusing discarded flash drives for larger storage units)\nGiant sign! Legit!\nGiant arch! Legit!\nAHHH! Too much legitimacy!\nThe rest of the day was spent preparing for the official competition the next day. We had brought a bunch of duplicates of the components that go into making the blue-box gateway for AutoPlug, and we mounted them on a poster board and labeled the components very neatly. We also finalized our powerpoint presentations and demonstration.\nMadhur and Kai check out our booth setup.\nThis is what the competition venue looks like with all the booths.\nOutside of the venue at night.\nWe broke for lunch around noon and Kai led us to the Food Court. The Food Court was a very interesting experience. Unlike American mall food courts, you order whatever you want from a counter that is outside the court, and then you receive a number which represents your order. When your order is shown on an LCD monitor, you go to that specific restaurant in the Food Court and pick up your order. Kai recommended a beef soup dish so we got that and it was pretty good. Over lunch we learned that Kai is doing post-grad work studying to become a professional interpreter (so this job was perfect for her!). She did her undergrad in computer science so she had enough of a technical background to understand what our project was about. Once we got our food I asked Kai where we could get something to drink. She started looking for a nearby convenience store. This confused me, but Kai explained that usually Koreans don‚Äôt drink anything with their food (that‚Äôs what the rice is for, she said). I thought this was interesting, but afterwards we saw a place in the Food Court where you can fill a small silver cup with water to drink.\nSoooo many people at the Food Court!\nYou can see the different restaurants of the Food Court in the background.\nThis is what I had for lunch. Does anyone know what it is called?\nAfter preparing for the competition all day we took the shuttle back to the hotel. Kai told us that our hotel was in an area in Seoul famous for its Korean BBQ restaurants. She recommended a restaurant called Chae Dae Po and said it was nearby. So when we got back to the hotel we put our stuff down and looked up directions to Chae Dae Po. Unfortunately it was all in Korean, but we got the general area down. It was about a block away from the hotel and we were able to ask someone on the street to point us the rest of the way. Chae Dae Po was a very interesting experience. Pretty much no one in the restaurant spoke English. We were led to a table with a grill built into the top and we sat down on red stools. A waiter came by and had zero luck communicating with us. He went away and brought back a girl who spoke a very tiny amount of English. She wrote on paper what we could order: either pork or beef with two options for each. We ordered one sweet pork and one salty pork. She brought out a bunch of bowls with vegetables and sauces and then brought out the meat. She cooked the meat right in front of us on the grill and let us know when it was done. We managed to communicate with her enough to find out that she was 18 and a sophomore in high school. She said that‚Äôs where she was learning English. When we were finished we went to the front to pay. The guy who was going to clean our table off bowed to me and I sort of awkwardly bowed back.\nWe pretty much immediately went to sleep back at the hotel, because we had to wake up early for the competition!\n","date":"November 24, 2010","externalUrl":null,"permalink":"/2010/11/24/korea-day-two.html","section":"Posts","summary":"This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize.","title":"Korea - Day Two","type":"posts"},{"content":" This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize. We took the last train from 30th St. station to Trenton at 12:01 AM. We got to the Newark Airport around 2 AM, and then we waited around until they opened the security checkpoint around 3:30 AM. We were lucky that they didn‚Äôt give us any trouble about the electronic components we were carrying for AutoPlug (our demonstration unit consists of a Tupperware box with a battery pack and several circuits inside, and there‚Äôs an antenna sticking out of the top, so yeah it pretty much looks like a bomb). Anyway, we have a letter from our professor on Penn letterhead explaining what we were carrying and what it was for. Newark‚Äôs airport is pretty nice, but I wasn‚Äôt too happy with their lack of electrical outlets. There seemed to be just one ‚Äúcharging station‚Äù (sponsored by Samsung!) for our area in the airport. I was surprised to see that the flight from Newark to San Francisco had TVs with DirectTV on the back of every seat. But it made you pay $6 if you watched past the ‚Äútrial time‚Äù of like 15 minutes.\nThe airport in San Francisco was a little bit hectic because our flight was a little late getting in. They had actually already closed the check-in counter for all Asiana flights. Luckily the flight to Korea was delayed about an hour, and they called someone over to print our boarding passes. The flight to Incheon was awesome. I don‚Äôt know why more economy domestic flights don‚Äôt have a TV in the back of the seat. It makes the flight so much better. They had some pretty great movies on there too. I finally got to watch Despicable Me, Salt, and Grown Ups. The food was very good too. They served us Beef Steak for one meal and chicken and pasta for another.\n1,000 Korean Won (about 88 cents at time of writing)\nPassing through immigration in Korea was a breeze, and we stopped to exchange some currency. I exchanged $20 and received 21,700 won (I‚Äôm rich!). When we got to the airport exit we were approached by a couple of different guys wanting to drive us to the hotel in a taxi. We said no thanks and checked with the information desk and found a bus that would take us there for 10,000 won. As we were leaving the airport we were approached by the same guy, and just for fun we asked him how much it would cost us for him to take us to the airport in his taxi. He avoided the question for a minute but then finally said, ‚ÄúReal cheap: 85,000 won.‚Äù I‚Äôm no math major, but something told me that wasn‚Äôt a very good deal. We took the bus, and it was actually a really luxurious bus, with a big screen TV at the front and really comfortable seats. Unfortunately we missed our stop to get to the hotel, but all of the stops in the area were really close together so it was easy to get off and walk back.\nAirport¬†Limousine¬†Bus that took us to the hotel\nOur hotel is very luxurious. I‚Äôm not sure if it has a star rating, but I found a plaque outside the hotel with five flowers on it (five flower hotel?). The room is very comfortable. I found something really strange in the hotel though. Really strange and really awesome. In the corner of the room was a box labeled ‚ÄúDescending Life Line.‚Äù According to the instructions, it‚Äôs basically a rappelling kit you can use to escape from the room in case of an emergency. You attach the line to a hook on the wall in the room, wrap the belt around your waist, and then rappel down the building‚Äôs wall. Awesome, right?\n‚ÄúDescending Life Line‚Äù Rappelling Kit that came with the hotel room\nAfter getting settled in the hotel, we were pretty hungry so we walked around the area near the hotel looking for food. We managed to find a fried chicken restaurant called Two Two Fried Chicken. We weren‚Äôt having much luck communicating with the lady making the chicken, but luckily someone in the restaurant spoke some English so we were able to order two things of chicken, one with seasoning and one with sauce. The order also came with two Pepsi cans, Korean Pepsi cans. I also had a Korean Coke on the flight to Seoul. In my opinion, Korean Coke is better than American Coke, but still not quite as good as Mexican Coke. We went to bed almost immediately after eating the chicken, because we had to get up early to get on the shuttle that would take us to the competition venue.\nKorean fried chicken restaurant\n","date":"November 23, 2010","externalUrl":null,"permalink":"/2010/11/23/korea-day-one.html","section":"Posts","summary":"This post is part of a series of journals I wrote while traveling to Seoul, South Korea to compete in the 2010 World Embedded Software Contest, for which my team\u0026rsquo;s project won the grand prize.","title":"Korea - Day One","type":"posts"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/10.04/","section":"Tags","summary":"","title":"10.04","type":"tags"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/drivers/","section":"Tags","summary":"","title":"Drivers","type":"tags"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/gateway-m6755/","section":"Tags","summary":"","title":"Gateway M6755","type":"tags"},{"content":"I really like Ubuntu. Especially since 10.04 Lucid Lynx was released. The user interface is beautiful, and the operating system is very fast. Right now we‚Äôre using Ubuntu as the operating system for both the AutoPlug hardware platform as well as our development machines.\nInstalling Ubuntu is very easy, with the exception of installing Wifi drivers in my particular case. Ubuntu does not natively support the Marvell TopDog Wifi card in my Gateway M6755 laptop. Usually it would be easy to simply load the Windows .inf driver file for the card in Ubuntu using ndiswrapper, but the Marvell TopDog card is a little bit more difficult to install. For my reference, and yours, here‚Äôs how I install the driver for the Marvell TopDog Wifi card in Ubuntu.\nPrerequisites\nYou should have ndiswrapper installed in Ubuntu. To do this, open a terminal window and type:\nsudo apt-get install ndiswrapper-common ndiswrapper-utils-1.9 ndisgtk You can also find these packages in Synaptic Package Manager. Just search for ndiswrapper.\nYou also need to download the Windows .inf driver file for the Marvell TopDog card. For your convenience, you can download it in a ZIP archive file from this website: Marvell TopDog Windows Driver (NetMW14x).\nInstalling the Driver\nUnzip the ZIP file you downloaded, open a terminal window, cd to the directory where you unzipped NetMW14x.inf, and run:\nsudo ndiswrapper -i NetMW14x.inf If it worked, you should see:\ninstalling netmw14x ‚Ä¶ You should now be able to run:\nsudo ndiswrapper -l And see:\nnetmw14x : driver installed device (11AB:2A08) present Now you just need to extract the firmware. To do this, run:\nsudo ndiswrapper -m You should see:\nadding ‚Äúalias wlan0 ndiswrapper‚Äù to /etc/modprobe.d/ndiswrapper ‚Ä¶ Now run:\nsudo depmod -a Finally, run:\nsudo modprobe ndiswrapper You should now be able to see wireless networks if you click the Wi-Fi icon in the panel at the top of the screen. However, you have to do one more thing so that Ubuntu will modprobe ndiswrapper at boot.\nIn the terminal window, type:\nsudo gedit /etc/modules And add ndiswrapper to the list. Save the file, and you should be good to go!\n","date":"July 21, 2010","externalUrl":null,"permalink":"/2010/07/21/installing-gateway-m6755-wifi-drivers-for-ubuntu.html","section":"Posts","summary":"I really like Ubuntu.","title":"Installing Gateway M6755 Wi-Fi Drivers for Ubuntu","type":"posts"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/lucid-lynx/","section":"Tags","summary":"","title":"Lucid Lynx","type":"tags"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/ndiswrapper/","section":"Tags","summary":"","title":"Ndiswrapper","type":"tags"},{"content":"","date":"July 21, 2010","externalUrl":null,"permalink":"/tags/wi-fi/","section":"Tags","summary":"","title":"Wi-Fi","type":"tags"},{"content":"Before I went to college I purchased a Gateway M6755 laptop. It has served me well for the past two years, but two years of schoolwork, instant messaging, coding, and Tetris can do a lot of damage to a laptop, particularly its keyboard.\nAbout a week ago I took my laptop out on an AutoPlug test drive. While we were driving, it started to rain and my laptop got a little wet. I didn‚Äôt think much of it, but later that weekend I discovered that I could no longer type the characters ‚Äòg‚Äô and \u0026lsquo;h‚Äô nor could I press the backspace key. If I tried to press those keys, nothing would happen. After some fiddling and cleaning attempts, I decided I needed a new keyboard.\nNot only were those keys not working, but my keyboard was also dirty and several of the keys had begun to fade. This is not only bad for aesthetic reasons, but most of the time the keys that fade are the ones you press the most. For example, letters that make up the passwords you use for your computer, email, programs, etc. So replacing the keyboard is also a good idea for security reasons.\nI ended up purchasing the exact same part from a website called B2Cmarts. I believe they‚Äôre located in China, but the part I ordered was shipped from San Jose, CA. I ordered the part on Monday and it arrived on Thursday, so shipping was pretty fast.\nWhat You‚Äôll Need # Phillips Head Screwdriver Flat Head Screwdriver Anti-static wrist strap (optional, but probably a good idea) Removing the Battery # Before you do any sort of hardware replacements like this, you‚Äôll always want to shutdown the laptop and remove its battery.\nYou can remove the battery by first sliding this switch from the lock icon to the unlock icon.\nThen, slide this switch forward and simultaneously push the battery out.\nReplacing the Keyboard # Now that the battery‚Äôs been removed, we‚Äôre good to replace the keyboard.\nStart by removing the screw from the underside of the laptop marked by a K (for keyboard!).\nNext, flip the laptop over and open it to look at the keyboard. You‚Äôre going to be removing the plastic bar between the keyboard and the screen (the one that has the power button and multimedia shortcut buttons). Before you do this, know that the bar has a ribbon cable under it attached the rest of the computer. So you‚Äôre just going to pull it up from the computer, not completely remove it.\nTo pull up the bar,¬†insert a flat head screwdriver in the crack between the bar and the keyboard, and¬†very carefully¬†pry the bar up from the computer.\nHere you can see the ribbon cable that connects the bar to the rest of the computer.\nYou can just let the bar chill up against the screen for now.\nNext, remove the screws that attach the keyboard to the computer. They‚Äôre located above the F1 and Insert keys.\nNow, pull the keyboard up slowly. The keyboard is connected to the computer via a ribbon cable. You need to push the brown tabs of the ribbon cable connector towards the laptop‚Äôs screen to unlock the ribbon cable. In the image below, the ribbon cable has been unlocked (brown connector forward).\nNow you can completely remove the old keyboard from the laptop. Here‚Äôs a picture of my old keyboard (top) next to my new keyboard (bottom).\nI don‚Äôt have pictures for installing the new keyboard, but all you need to do is reverse the process you used to remove the old one. So:\nInsert the new ribbon cable into the connector. Close the brown tabs. Insert the keyboard in place. Replace the keyboard screws. Pop the power/multimedia bar back into place. Flip the laptop over. Replace the ‚ÄúK‚Äù screw. Replace the battery. Flip the lock switch back to the lock icon. Now you should be able to plug in the laptop‚Äôs power adapter and press the power button. In my case, replacing the keyboard fixed my broken \u0026lsquo;g‚Äô, \u0026lsquo;h‚Äô, and Backspace keys.\n","date":"July 17, 2010","externalUrl":null,"permalink":"/2010/07/17/how-to-replace-the-keyboard-of-a-gateway-m6755.html","section":"Posts","summary":"Before I went to college I purchased a Gateway M6755 laptop.","title":"How to Replace the Keyboard of a Gateway M6755 Laptop","type":"posts"},{"content":"","date":"July 17, 2010","externalUrl":null,"permalink":"/tags/keyboard/","section":"Tags","summary":"","title":"Keyboard","type":"tags"},{"content":"","date":"July 17, 2010","externalUrl":null,"permalink":"/tags/repair/","section":"Tags","summary":"","title":"Repair","type":"tags"},{"content":"","date":"July 9, 2008","externalUrl":null,"permalink":"/tags/compaq-armada-m300/","section":"Tags","summary":"","title":"Compaq Armada M300","type":"tags"},{"content":"Here is my detailed account of how I brought my four-year-old Compaq Armada M300 laptop back to life from its supposed death.\nSystem Specifications:\nIntel Pentium III 500Mz Processor 11.3\u0026quot; CTFT XGA display (1024x768 LCD panel) 320 MB RAM 12 GB Hard Drive ATI Rage LT Pro Video Card (4 MB video SGRAM) ESS Maestro 2E Sound Card Lucent Mini-PCI 56K Modem Intel Pro/100+ Mini PCI Ethernet Card Background Story # My brother and I used this Compaq laptop from about 2001 to 2004. We ran Windows 98 on it and mainly used it as a travel companion when we were away from our desktops. While visiting our Aunt‚Äôs house in Texas in 2004, we left it on overnight. When we returned the next morning, the laptop was mysteriously off. When we tried to boot it, it showed the Compaq BIOS splash screen, a blinking white cursor appeared in the upper-right-hand corner of the screen, the message ‚ÄúF12 = Network Service Boot‚Äù appeared in the lower-right-hand corner of the screen, and‚Ä¶it froze there. The laptop would do this every time we tried to boot it up. After returning home, even our father could not figure out what was wrong. So we stored the laptop in its Targus carrying case and put it on a shelf in our closet. It remained on that shelf for four years.\nThe Repair # After completing the Intro to PC Architecture class at Intel last week, I was inspired to try my hand again at fixing my Compaq laptop.\nI dusted off the Targus carrying case and setup the laptop. Surprisingly, the thing still turned on‚Ä¶and exhibited the same problem as it did four years ago. I turned it off and thought for a bit. I thought, ‚ÄúWell, if it‚Äôs freezing on the BIOS screen, maybe it‚Äôs a problem with the CMOS battery.‚Äù\nNow this was the first time I had ever tried to repair a laptop, at least hardware-wise. I had no idea where an hardware components were located on the thing. I know desktop hardware‚Ä¶not laptop hardware. However, I read somewhere about a website called eService Info. I cannot tell you how much I love eService Info. It‚Äôs a website where you can search for just about any electronic device and find its manufacturer‚Äôs service manual. Fortunately it had the Compaq Armada M300 service manual available for download.\nSo now I hd this fairly large PDF file detailing how to take apart, repair, and put back together the Compaq Armada M300. The CMOS battery is actually very easy to access on this laptop. It is located on the bottom of the laptop near the back under a popup tab (it‚Äôs the the module shaped like a teardrop in the picture below):\nSo I removed the tab and found the CMOS battery. I cut the red and black wires connected to it with fingernail clippers (poor man‚Äôs wire cutters) and measured the voltage coming out of it with a multimeter. The battery is supposed to output 3 volts. It was actually outputting 0.25 volts. So even if the CMOS battery wasn‚Äôt the problem with the laptop, it sure wasn‚Äôt helping.\nI located a new CMOS battery on eBay for $3 (including shipping). I patiently waited for it to arrive in my mailbox.\nI got the CMOS battery about four days later. I felt silly for cutting the wires of the old one. Apparently the wires go into a connector plug that was hidden just under the bottom of the laptop. So I unplugged what was left of the old battery and plugged the new one in. I plugged in the AC adapter, pressed the power button, and‚Ä¶experienced the same problem. ‚ÄúWell, dang it,‚Äù I said. I was really hoping it would be a simple fix to replace the CMOS battery.\nIn the Intro to PC Architecture class, our instructor told us that the number one method that fixes about 90% of the ‚Äúdead‚Äù motherboards he receives is reseating the hardware. By ‚Äúreseating,‚Äù he means unplugging all components from the motherboard, waiting 10 minutes or so, and plugging everything back in. In his experience, reseating the hardware components has fixed way more computers than replacing parts.\nSo I thought I‚Äôd give reseating the hardware a try.\nI started with the hard drive. I had to unscrew a screw on the bottom of the laptop, pull up on this bevel thing, and pull out the hard drive. I took it out, waited a minute, and plugged it back in. Upon trying to boot, I still got the Compaq splash screen freeze. Bummer.\nNext, I tried the modem card on the bottom of the laptop:\nI unscrewed those two screws in the picture and unplugged a ribbon cable connected to the modem card. I waited a few minutes and plugged it back in. This time when I booted the laptop it got past the splash screen. ‚ÄúHooray,‚Äù I exclaimed! ‚ÄúI‚Äôve done it!‚Äù\nExcept I hadn‚Äôt really done it. It turns out there was more than one thing wrong with this laptop. The modem card was definitely a problem. Apparently the laptop was trying to boot to the modem.\nAnyway, back to the story, and the reason why the modem card wasn‚Äôt the only problem.\nFirst of all, my goal in fixing this laptop was to install a distribution of Linux on it and use it for basic word processing and internet usage at Penn, so I could keep my brand new Gatway laptop in my dorm room and take this Compaq laptop to class to take notes.\nNow I‚Äôm a total Linux n00b. I used it a little when I was working at Intel last summer, but I didn‚Äôt do very much with it. Keep that in mind.\nSo since I could get past the BIOS splash screen, I entered the BIOS setup. The BIOS settings looked all right. I reset them to the default settings just to be safe. I saved changes and exited the setup to try to boot into Windows 98. It showed that beautiful blue ‚ÄúLoading Windows 98‚Äù screen for about five seconds before automatically restarting. It continued to automatically restart when I tried again. The laptop just didn‚Äôt want to boot into Windows 98, I guess. Oh well, I didn‚Äôt want Windows 98 anyway.\nSo I used the docking station that goes with this laptop (which also magically still worked) to boot to a Windows 98 floppy disk. I love Windows 98 floppy disks. They allow you to format a hard drive very quickly. It‚Äôs really too bad floppy disk drives are disappearing from our computers. They‚Äôre really useful devices.\nAnyway, I formatted the hard drive and downloaded and burnt CDs of both Ubuntu and Xubuntu. I ended up going with Xubuntu as my Linux distribution because it supposedly runs better on older machines. I popped the Xubuntu CD into the CD drive and booted the computer. It booted from the CD and showed the Xubuntu install menu with an option to install Xubuntu.\nBut another option, Test RAM, caught my eye. I decided to try it just for fun.\nI‚Äôm really glad I did.\nWhen the CD ran MemTest to test my RAM, it showed nothing but errors in red. Memory sectors that had passed remained 0% while more and more red filled my screen. ‚ÄúWell, that explains why Windows 98 wasn‚Äôt working,‚Äù I thought.\nSo I was thinking my RAM was probably bad. A search on pricegrabber.com¬†indicated that a replacement stick of RAM would cost $48. Bummer. Anyway, I thought I would at least take the RAM out while I was debating on whether or not to buy a new stick.\nTo remove the RAM I had to push down on three tabs located at the top of the keyboard. While pressing those three tabs in, I had to pry up and pull back the whole keyboard:\nUnderneath was the motherboard of the laptop. I could clearly see certain parts, but most of the board was covered with a silver sheet of metal, probably some sort of heat dissipator.\nOne of the accessible parts was the RAM. I pulled on two side tabs and pulled the RAM out at a 45 degree angle just like the service manual said to.\nJust for fun, I thought I would reseat the stick and try MemTest again. So I reseated the DIMM, replaced the keyboard, and turned on the power button once more. The laptop booted to the same Install Xubuntu menu and I selected Test RAM again.\nThis time, MemTest was passing. Everything was passing. ‚ÄúWell that‚Äôs interesting,‚Äù I thought.\nI exited MemTest and tried installing Xubuntu. The installation setup popped up and I continued on to install Xubuntu on my newly rejuvenated laptop.\nConclusion # And that‚Äôs the story of how I fixed my first laptop.\nIn summary, the CMOS battery was almost dead so I replaced it. That didn‚Äôt fix it, but reseating the modem card got it booting past the Compaq BIOS splash screen. Finally, MemTest showed that my RAM was bad. After reseating the RAM, MemTest started passing and I was able to install Xubuntu.\nThe whole repair process cost $3 (for a new CMOS battery) and took about five hours.\n","date":"July 9, 2008","externalUrl":null,"permalink":"/2008/07/10/the-repair-of-my-compaq-armada-m300-laptop.html","section":"Posts","summary":"Here is my detailed account of how I brought my four-year-old Compaq Armada M300 laptop back to life from its supposed death.","title":"The Repair of My Compaq Armada M300 Laptop","type":"posts"},{"content":"","date":"January 1, 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"January 1, 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"January 1, 0001","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":" TARA: Totally Awesome Recipe Assistant # A Meteor-based voice assistant web application for cooking with recipes.\nkevincon/tara A \u0026ldquo;Siri for recipes\u0026rdquo; web application written using Meteor.js. JavaScript 1 0 Stanford Marguerite iPhone App # A free, open-source iPhone app for the Stanford Marguerite shuttle bus system.\nkevincon/marguerite-ios An iPhone app for riders of the Stanford Marguerite shuttle bus system. Objective-C 12 3 Utility Knife # A Flask-based web app for visualizing Dropbox space/file usage as a treemap.\nkevincon/utilityknife Windirstat for Dropbox (visualization of Dropbox space/file usage). HTML 31 4 Lightning Rod # A free, cross-platform Dropbox client written in Java that runs on a flash drive.\nTeammates: Evan Benshetler, Mike Chen,¬†Casey Conley,¬†Bill Etter\nAwards:\nFinalist, AngelHack Hackathon, Spring 2012 kevincon/lightningrod A cross-platform Dropbox client written in Java. Java 1 0 HAWK: Helicopter Aircraft Wielding Kinect # A quadrotor equipped with a Microsoft Kinect that creates 3D maps of buildings.\nTeammates: Kelsey Duncombe-Smith,¬†Bill Etter, Paul Gurniak, Matt Hale, Alfredo Muniz,¬†Teddy Zhang\nAdvisor: Rahul Mangharam\nAwards:\n2nd Place, Cornell Cup Embedded Systems Competition, 2012 Honorable Mention, University of Pennsylvania ESE Senior Design, 2011-2012 mlab-upenn/HAWK-daemons Daemons for the Helicopter Aircraft Wielding Kinect (HAWK) project. C 4 0 enunciate.me # A Django-based web app/widget that helps others learn how to pronounce your name correctly.\nTeammates: Casey Conley, Varun Sampath\nAwards:\nBest Market Potential Award, PennApps Hackathon, Spring 2012 uWave # A microwave hacked to play YouTube videos, completed in under 40 hours.\nTeammates:¬†Varun Sampath, Ben Shyong,¬†Teddy Zhang\nAwards:\nFirst Place, PennApps Hackathon, Fall 2011 Website\nvsampath/uWave Team Wye Delta\u0026rsquo;s Project for PennApps 2011 Java 12 4 SMS Person Finder # A crowd-sourced, text-message interface for Google‚Äôs Person Finder disaster victim database, completed in under 24 hours.\nTeammates:\nTed Lee Lionel Young Jonathan Koff Anup Mantri Dan Brown Deepali Singla Sian Liu and a few others Awards:\nFirst Place, Random Hacks of Kindness Silicon Valley Hackathon, June 2011 Google Blog Post\nAutoPlug # A prototype automotive architecture for plug-n-play services.\nTeammates: Gabe Torres,¬†Teddy Zhang\nAdvisor: Rahul Mangharam\nAwards:\nGrand Prize, World Embedded Software Contest, 2010 Best Presentation, Rachleff Scholars Research Symposium, 2010 NEStalgia # A wireless rifle controller for the game Cabal on the Nintendo Entertainment System.\nTeammate:¬†Evan Benshetler\nWebsite\nSEPTA Now # A Rails-based real-time visualization of SEPTA‚Äôs regional rail trains, completed in under 40 hours.\nTeammates:¬†Varun Sampath, Ben Shyong,¬†Teddy Zhang\nAwards:\nStudent Choice Award, PennApps Hackathon, Fall 2010 kevincon/septanow A Rails-based real-time visualization of SEPTA‚Äôs regional rail trains, completed in under 40 hours for PennApps Fall 2010. JavaScript 0 0 ","date":"January 1, 0001","externalUrl":null,"permalink":"/projects/university/","section":"Projects","summary":"TARA: Totally Awesome Recipe Assistant # A Meteor-based voice assistant web application for cooking with recipes.","title":"University Projects","type":"projects"}]